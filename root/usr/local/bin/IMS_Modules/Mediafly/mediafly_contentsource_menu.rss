<?xml version='1.0' ?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">
<bookmark> mediafly_content_source_menu </bookmark>

  <onEnter>
      print(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Mediafly_ContentSource_menu_script>>>>>onEnter>>>>>>>>>>>>");
      bGetVideoChannel = 0;
      bGetAudioChannel = 0;
      bRedraw = 0;

  </onEnter>
  


  <script>
    print(">>>>>>>>>>>>>>>>>>Mediafly_ContentSource_menu_Script>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
    
    displayItemCnt = 0;
    displayTitleArray = null;
  
    menuArray = null;
    menuScriptArray = null;
    menuLinkArray = null;
    menuCnt = 0;
    menuType = null;

    mediaTypeFilter=null;

     keyFilePath = getStoragePath("key") + "__mdfly_key.dat";
     decryptionKeyArray = decFile(keyFilePath);
   
    sharedKey = getStringArrayAt(decryptionKeyArray,0);
    app_id =getStringArrayAt(decryptionKeyArray,1);
  
    print("KeyArray =",decryptionKeyArray);
    print("SharedKey= ", sharedKey);
    print("app_id= ",app_id);
  
    fileName= getStoragePath("tmp") + "mediaflyToken.dat";
    tokenArray = readStringFromFile(fileName);
      
     valtoken = getStringArrayAt(tokenArray, 0);
     tokenId = getStringArrayAt(tokenArray, 1);
     tokenTime = getStringArrayAt(tokenArray, 2);

       if(valtoken == null || tokenTime == null || (getSystemTime() - 3550) &gt; tokenTime)
	{
			    if(tokenArray != null)
		      {
			        /* delete all elements - tp */
			        tokenArray = deleteStringArrayAt(tokenArray,0);
			        tokenArray = deleteStringArrayAt(tokenArray,0);
			        tokenArray = deleteStringArrayAt(tokenArray,0);
		      }
		      
	      		executeScript("getToken");
	      
	}

	current_contentsource_file = getStoragePath("key")+"mdfly_tmpContentSource.dat";
	infoArray = readStringFromFile(current_contentsource_file);
	contentSourceTitle = getStringArrayAt(infoArray,0);
	contentSourceSlug = getStringArrayAt(infoArray,1);
	contentSourceSearchable = getStringArrayAt(infoArray,2);
	linkedUserName = getStringArrayAt(infoArray,3);

	print("ContentTile: ",contentSourceTitle);
	print("contentSourceSlug: ",contentSourceSlug);
	print("contentSourceSearchable:",contentSourceSearchable);
	print("linkedUserName",linkedUserName);

	contentSourceLogoUrl = "http://csassets.mediafly.com/" +contentSourceSlug+"/appThumb-114x114.png";
	print("contentSourceLogoUrl=",contentSourceLogoUrl);

	menuArray  = pushBackStringArray(menuArray, "$[Video]");
	menuScriptArray  = pushBackStringArray(menuScriptArray, "onPopularVideo");
	menuLinkArray = pushBackStringArray(menuLinkArray, "");
	itemClickArray = pushBackStringArray(itemClickArray,"OnVideoItem");
	menuCnt = menuCnt +1;

	menuArray  = pushBackStringArray(menuArray, "$[Audios]");
	menuScriptArray  = pushBackStringArray(menuScriptArray, "onPopularAudio");
	menuLinkArray = pushBackStringArray(menuLinkArray, "");
	itemClickArray = pushBackStringArray(itemClickArray,"OnAudioItem");
	menuCnt = menuCnt +1;
		
	if (contentSourceSearchable=="true")
	{
		menuArray  = pushBackStringArray(menuArray, "$[Search Channels]");
		menuScriptArray  = pushBackStringArray(menuScriptArray, "onSearch");
		menuLinkArray = pushBackStringArray(menuLinkArray, "rss_file://./IMS_Modules/Mediafly/mediafly_search.rss");
		itemClickArray = pushBackStringArray(itemClickArray,"");
		menuCnt = menuCnt +1;		
	}
	


	

    print(">>>>>>>>>>>>>>>>>>>>>>SetRefreshTime>>>>>>>>>>>>>>>>>>>>>>>>");
    setRefreshTime(200);
    
    setFocusItemIndex(0);

  </script>
  
   <onRefresh>
    
    		print(">>>>>>>>>>>>>>>>>>>>onRefresh>>>>>>>>>>>>>>>>>>>>>>>");
    		setRefreshTime(-1);
		executeScript("onPopularVideo"); 
		setFocusMenuIndex(0);
	
    </onRefresh>

  <onPopularVideo>
        print("enter Popular Video submenu");
        executeScript("getToken");        
     
        if (bGetVideoChannel!=1)
        {
        	bRedraw = 1;
        	videoChannelCnt = 0;
        	mediaTypeFilter = "video";
		executeScript("onGetContentSourceChannel");
		bGetVideoChannel = 1;
        }
        else
        {
        	executeScript("deleteDisplayArray");
        }

        displayTitleArray = videoItemDisplayArray;
        imageUrlArray =  videoImageUrlArray;
        
        if(displayItemCnt != videoChannelCnt)
            {
            	bRedraw = 1;
            	displayItemCnt = videoChannelCnt;
            	
            }

        print("displayTitleArray: ",displayTitleArray);
        print("displayItemCnt: ",displayItemCnt);
        if(bRedraw == 1)
        {
          showIdle();
          redrawDisplay();        
          cancelIdle();
        }

        setEnv("mdflyfilter","video");

        if (linkedUserName==null)
	        writeStringToFile(getStoragePath("tmp") + "mdflyUserContext.dat","app_context_system");
	else
		writeStringToFile(getStoragePath("tmp") + "mdflyUserContext.dat",linkedUserName);
		
      	print("videoChannelTitleArray",videoItemDisplay);
      	print("videoChannelCnt",videoChannelCnt);
	setFocusItemIndex(0);
  </onPopularVideo>
  
  <OnVideoItem>
        focusIndex = getFocusItemIndex();
        print("focusIndex: ", focusIndex);
        if(focusIndex &gt; -1) 
        {
            slugCh = getStringArrayAt(videoSlugArray, focusIndex);

            storagePathMediaflyChannel = getStoragePath("tmp");
            storagePathMediaflyChannel = storagePathMediaflyChannel + "mediaflyChannel.dat";
            writeStringToFile(storagePathMediaflyChannel, slugCh);

             pathMediafly = getStoragePath("tmp") +  "mediaflypath.dat";
             writeStringToFile(pathMediafly,"Popular Videos");
             print("channelSlug=",slugCh);
            /* link to display channel tp */
            mylink="rss_file://./IMS_Modules/Mediafly/mediafly_contentsource_channel.rss";

	}
  </OnVideoItem>


  
  <onPopularAudio>
      	 print("enter Popular Audio submenu");
        executeScript("getToken");        
     
        if (bGetAudioChannel!=1)
        {
        	bRedraw = 1;
        	audioChannelCnt = 0;
        	mediaTypeFilter = "audio";
		executeScript("onGetContentSourceChannel");
		
        }

        displayTitleArray = audioItemDisplayArray;
        imageUrlArray =  audioImageUrlArray;
        
        if(displayItemCnt != audioChannelCnt)
            {
            	bRedraw = 1;
            	displayItemCnt = audioChannelCnt;
            	
            }

        print("displayTitleArray: ",displayTitleArray);
        print("displayItemCnt: ",displayItemCnt);
        if(bRedraw == 1)
        {
          showIdle();
          redrawDisplay();        
          cancelIdle();
        }

        setEnv("mdflyfilter","audio");
        
	if (linkedUserName==null)
	        writeStringToFile(getStoragePath("tmp") + "mdflyUserContext.dat","app_context_system");
	else
		writeStringToFile(getStoragePath("tmp") + "mdflyUserContext.dat",linkedUserName);
		
      	print("audioChannelTitleArray",audioItemDisplay);
      	print("audioChannelCnt",audioChannelCnt);
	setFocusItemIndex(0);
  </onPopularAudio>
  
  <OnAudioItem>
        focusIndex = getFocusItemIndex();
        print("focusIndex: ", focusIndex);
        if(focusIndex &gt; -1) 
        {
            slugCh = getStringArrayAt(audioSlugArray, focusIndex);
            storagePathMediaflyChannel = getStoragePath("tmp") + "mediaflyChannel.dat";
            writeStringToFile(storagePathMediaflyChannel, slugCh);
            pathMediafly = getStoragePath("tmp") +  "mediaflypath.dat";
            writeStringToFile(pathMediafly,"Popular Audios");
            /* link to display channel tp */
            mylink="rss_file://./IMS_Modules/Mediafly/mediafly_contentsource_channel.rss";
        }
  </OnAudioItem>

	  <onSearch>
	        searchlink = null;
	        keyword= getInput("Enter keyword", "doModal");
	        if (keyword==null)
	          print("enter null");
	        else 
	        {
	          print("The search Keyword is ", keyword);
	          storagePathMediaflySearch = getStoragePath("tmp");
	          storagePathMediaflySearch = storagePathMediaflySearch + "mediaflySearch.dat";
	          writeStringToFile(storagePathMediaflySearch, keyword);
	          csjump = "success";
	          searchlink = "rss_file://./IMS_Modules/Mediafly/mediafly_search.rss";
	        }
	        searchlink;
	  </onSearch>



	  <onGetContentSourceChannel>
		if (linkedUserName!=null)
		{
			executeScript("getLinkedContentSourceChannels");
		}
		else
		{
			executeScript("getDefaultContentSourceChannels");
		}
		redrawDisplay();
 		
 	</onGetContentSourceChannel>


 	


<!-- the global onEnter element will be executed when enter or re-enter the page -->
  <mediaDisplay name="threePartsView"
     showDefaultInfo="no"
     autoSelectMenu="no"
     autoSelectItem="no"
     forceFocusOnItem="yes"
     selectMenuOnRight="no"
     

    	
     itemPerPage = "5"
     
     imageParentFocus ="null"
     parentFocusFontColor="200:200:0"
     imageFocus=" "

		
     backgroundColor="28:35:51"
     sideColorLeft="28:35:51"
     sideColorRight="28:35:51"
		
     headerImageXPC = "11.1"
     headerImageYPC = "8"
     headerImageWidthPC = "11"
     headerImageHightPC = "10"
		
     headerCapWidthPC = "0"
     headerWidthPC = "0"

     menuXPC = "0"
     menuYPC = "29"
     menuWidthPC = "31.72"
     menuHeightPC = "10.56"
     menuPerPage = "5"

    menuImageXPC = "0"
    menuImageYPC = "29"
    menuImageWidthPC ="0"
    menuImageHeightPC="0"
    

		
     itemImageXPC = "38"
     itemImageYPC = "29"
     itemImageCapYPC = "2"
     itemImageWidthPC = "5.58"
     itemImageHeightPC = "8"
                
     itemXPC = "45"
     itemYPC = "28"
     itemWidthPC = "45"
     itemHeightPC = "11"
    
     
     itemBackgroundColor="-1:-1:-1"

    
     
     popupXPC="8"
     popupYPC="15"
     popupWidthPC="22.3"
     popupHeightPC="5.5"
     popupFontSize="13"
     popupBorderColor="28:35:51"
     popupForegroundColor="255:255:255"
     popupBackgroundColor="28:35:51"


           idleImageXPC="83.12"
           idleImageYPC="89.58"
           idleImageWidthPC="3.9"
           idleImageHeightPC="5.3"
		
     showHeader="no"
  >


    <idleImage> image/POPUP_LOADING_01.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_02.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_03.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_04.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_05.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_06.fsp </idleImage>
    
   <backgroundDisplay  name=mediafly_background>
		<image offsetXPC=0  offsetYPC= 0 widthPC=100 heightPC=100>
			<script>
				"./IMS_Modules/Mediafly/image/mediafly_bg_01-01.fsp";
			</script>
		</image>
</backgroundDisplay>



		<image offsetXPC=31.7  offsetYPC= 26.11 widthPC=3.52 heightPC=74.03 redraw="no">
			<script>
				"./IMS_Modules/Mediafly/image/mediafly_bg_line01.fsp";
			</script>
		</image>

			<!--ContentSource Logo-->
	    <image offsetXPC=6.8  offsetYPC= 2.64 widthPC=26.56 heightPC=15.69 redraw="no">
	      <script>
	   		contentSourceLogoUrl;
	      </script>
	    </image>
	    	<!--ContentSource Title-->
	  <text offsetXPC="9.2" offsetYPC="20" widthPC="40" heightPC="5"  fontSize="18" foregroundColor="255:255:255"
	    backgroundColor="-1:-1:-1" align="left"
	   >
			      <script>
				    	contentSourceTitle;
			      </script>
	    </text>

<menuDisplay>

		<image offsetXPC=0 offsetYPC=0 widthPC=100 heightPC=100 useBackgroundSurface=yes>

		<script>
		index1 = getQueryMenuIndex();
		index2 = getFocusMenuIndex();
		if (index1 == index2)
		{
			if (getDrawingItemState() != "focus")
			{
				"./IMS_Modules/Mediafly/image/mediafly_menu_focus.fsp";
			}
			else
			{
				"./IMS_Modules/Mediafly/image/mediafly_menu_inactive.fsp";
			}
		}
		else
		{
			null;
		}
		</script>
		</image>
		<text offsetXPC=28 offsetYPC=10 widthPC=72  heightPC=80 backgroundColor=-1:-1:-1  fontSize=17 >
		<foregroundColor>
			<script>
				fgcolor = "102:102:102";
				queryIndex = getQueryMenuIndex();
				focusIndex = getFocusMenuIndex();
				if (queryIndex == focusIndex) {
					fgcolor = "0:148:13";
				}
				fgcolor;
			</script>
		</foregroundColor>
		
		<script>
			index = getQueryMenuIndex();
			str = getStringArrayAt(menuArray, index);
			str;
		</script>
		</text>
</menuDisplay>

  <text offsetXPC="53" offsetYPC="14" widthPC="40" heightPC="5"  fontSize="16" foregroundColor="51:51:51" backgroundColor="-1:-1:-1" align="right">
		      <script>
		      	if (defaultUserName!=null&amp;&amp;defaultUserName!="")
		      	{
		      		 "Welcome!   "+defaultUserName;
		      	}
		        else 
		        {
		        	null;
		        }
		        
		      </script>
    	</text>
	
    <onUserInput>
      <script>
      userInput = currentUserInput();
      focusMenuIndex = getFocusMenuIndex();
      focusItemState = getDrawingItemState();
      print("--------------mediaDisplay-------onUserInput---------");
      print("Input:", userInput);
      print("focusMenuIndex: ", focusMenuIndex, "focusItemState: ",focusItemState);

      ret = "false";

      if (userInput == "right"  &amp;&amp; focusItemState == "focus")
        	ret = "true"; /* do nothing here */
        	
      /* block left key */
      if (userInput == "left"  &amp;&amp; focusItemState != "focus")
        	ret = "true"; /* do nothing here */
        	
      if(getPageInfo("majorContext") == "menu"  &amp;&amp; (userInput == "up" || userInput == "down"))
      {
          if(displayItemCnt &gt; 0)
          {
            displayItemCnt = 0;
            showIdle();
            redrawDisplay();
            cancelIdle();
          }
      }
	  if (getPageInfo("majorContext") == "menu" &amp;&amp; userInput == "down")
	  {
  		focusIndex = getFocusMenuIndex();
  		print("focusIndex: ", focusIndex);
  		title = getStringArrayAt(menuArray, Add(focusIndex,1));
  		print("title=",title);
  		if (title == null || title == "")
  		{
  			ret = "true";
  		}
	  }

      print("exit onUserInput ret: ", ret);
      ret;
    </script>      
    </onUserInput>
    
    <script>
      print("------------------MediaDisplay---OnUserInput-----Script--------------");
      focusItemState = getDrawingItemState();
      focusMenuIndex = getFocusMenuIndex();
      print("bGotChannels: ",bGotChannels, "focusItemState :", focusItemState);
      
    </script>

  
    

    
	    <itemDisplay>
		<image offsetXPC=0 offsetYPC=0 widthPC=100 heightPC=100>
			<script>
			index1 = getQueryItemIndex();
			index2 =getFocusItemIndex ();
			if (index1 == index2)
			{
				if (getDrawingItemState() == "focus")
				{
					"./IMS_Modules/Mediafly/image/mediafly_menuitem_focus.fsp";
				}
				else
				{
					"./IMS_Modules/Mediafly/image/mediafly_menuitem_unfocus.fsp";
				}
			}
			else
			{
				"./IMS_Modules/Mediafly/image/mediafly_menuitem_unfocus.fsp";
			}
			
			</script>
		</image>
			<text offsetXPC=5 offsetYPC=10 widthPC=90 heightPC=80 backgroundColor=-1:-1:-1  fontSize=16 >
			<foregroundColor>
				<script>
					fgcolor = "102:102:102";
					queryIndex = getQueryItemIndex();
					focusIndex = getFocusItemIndex();
					if (queryIndex == focusIndex) {
						fgcolor = "0:148:13";
					}
					fgcolor;
				</script>
			</foregroundColor>
			
			<script>
				index = getQueryItemIndex();
				str = getStringArrayAt(displayTitleArray , index);
				str;
			</script>
			</text>
	</itemDisplay>
	
	<image  redraw=yes offsetXPC=91.48  offsetYPC=30 widthPC=0.55 heightPC=51>
		<script>
			if (getDrawingItemState() =="focus"&amp;&amp;displayItemCnt&gt;0)
			{
				"./IMS_Modules/Mediafly/image/sliding_bar.fsp";
			}
			else
			{
				null;
			}
			
		</script>
	</image>
	
	<image redraw=yes offsetXPC=91.48   widthPC=0.55 >
		<offsetYPC>
			<script>
				focusIndex = getFocusItemIndex();
				if (displayItemCnt &gt; 0)
				{
					unitH = 51/displayItemCnt;
					offset = Add(30, focusIndex*unitH);
				}
			</script>
		</offsetYPC>
		<heightPC>
			<script>
				
				if (displayItemCnt &gt; 0)
				{
					Height = 51/displayItemCnt;
					
				}
			</script>
		</heightPC>
		<script>
			if (getDrawingItemState() =="focus"&amp;&amp;displayItemCnt&gt;0)
			{
				"./IMS_Modules/Mediafly/image/sliding.fsp";;
			}
			else
			{
				null;
			}
		</script>
	</image>
    
 </mediaDisplay>


<menu_template>
	<onClick>
		 
		menuIndex = getFocusMenuIndex();
		print("menuIndex=",menuIndex);
		 executeScript(getStringArrayAt(menuScriptArray, menuIndex));
    		mLink = getStringArrayAt(menuLinkArray, menuIndex);
  		  if ( mLink == "")
  			mLink = null;
  		print("My Jump Link is ",mLink); 
  		
  		if (mLink!=null)
  		{
  			print("Ready To Jump >>>>>>>>>>>>>>>");
  			jumpToLink("urlSelection");
  		}
	 		
  		 null;
	</onClick>
	
</menu_template>

<urlSelection>
        <link>
          <script>
            mLink;
          </script>
        </link>
 </urlSelection>   
  
     <item_template>
  
    <onClick>
      <script>
        print("---OnClick---");
	      onClickItemScript = getStringArrayAt(itemClickArray,getFocusMenuIndex());
    		if ( onClickItemScript != null &amp;&amp; onClickItemScript != "" )
    		{
    			print("execute", onClickItemScript);
    			executeScript(onClickItemScript);
    			mylink;
    		}
      </script>
    </onClick>
    
   

    <media:thumbnail>
      <script>
        getStringArrayAt(imageUrlArray , -1);
      </script>
    </media:thumbnail>
    
    <link>
      <script>
        mylink;
      </script>
    </link>
    
  </item_template>
  
 
  
  <channel>
  
	<title></title>
	 <!--<link>rss_file://./IMS_Modules/Mediafly/mediafly_menu.rss</link> -->
    null;
    <itemSize>
      <script>
        	displayItemCnt;
      </script>
    </itemSize>
    <menuSize>
	<script>
		menuCnt;
	</script>
     </menuSize>

  </channel>

  <getDefaultContentSourceChannels>
          print(">>>>>>>>>Ready To Get Default ContentSource Channels");
          
          print("mediaTypeFilter:",mediaTypeFilter);
          
          md5_string = MD5(sharedKey,tokenId, "true", mediaTypeFilter, "Strip", "__default__",contentSourceSlug);
          print("md5 string", md5_string);
          url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Channels.GetChannels?app_id="+app_id+"&amp;token=";
          url = url + valtoken;
          url = url + "&amp;capitalizeChannelNames=true";
          url = url + "&amp;mediaType=" + mediaTypeFilter;
          url = url + "&amp;newlineFormat=Strip";
          url = url + "&amp;user_context=__default__";
          url = url +"&amp;source="+contentSourceSlug;
          url = url + "&amp;call_sig=";
          url = url + md5_string;
          print("url=",url);
          file = loadXMLFile(url);
          cancelIdle();
          if (file == null) 
          {
	            channelCnt = 0;
	            print("Load URL fail ", url);
          }
          else 
          {
          	    status = getXMLAttribute("response","status");
          	    print("Status = ", status);
          	    if (status=="ok")
          	    {
          	    	 channelCnt = getXMLElementCount("response", "channels", "channel");
          	    }
          	    else
          	    {
          	    	channelCnt=0;
          	    }
	           
	            print("channelCnt = ", channelCnt);
          }
        
          if (channelCnt &gt; 0) 
          {
		    count=0;
		    
		         if (mediaTypeFilter=="video")
			     {
			     	 bGetVideChannel = 1;
			     	  videoItemDisplayArray = null;
				    videoSlugArray = null;
				    videoImageUrlArray = null;
				    videoEpisodeCountArray = null;
			     }
			 else if (mediaTypeFilter=="audio")
			 	{
			 		 bGetAudioChannel = 1;
		   
				    audioItemDisplayArray=null;
				    audioSlugArray=null;
				    audioImageUrlArray=null;
				    audioEpisodeCountArray=null;
			 	}
		    
		   
		   

	            while(1)
	            {
		              title       = getXMLAttribute("response", "channels", "channel", count, "name");
		              slug        = getXMLAttribute("response", "channels", "channel", count, "slug");
		              imageUrl    = getXMLAttribute("response", "channels", "channel", count, "imageUrl");
		              episodeCount= getXMLAttribute("response", "channels", "channel", count, "episodeCount");
		            

			     if (mediaTypeFilter=="video")
			     {
			     		
				     	   if(title != null &amp;&amp; episodeCount > 0)
			              {
				                  videoItemDisplayArray  = pushBackStringArray(videoItemDisplayArray, title + "    (" + episodeCount + ")" );
				                  videoSlugArray             = pushBackStringArray(videoSlugArray, slug);
				                  videoImageUrlArray     = pushBackStringArray(videoImageUrlArray, imageUrl);
				                  videoEpisodeCountArray  = pushBackStringArray(videoEpisodeCountArray, episodeCount);
				                  videoChannelCnt = videoChannelCnt +1;
				                   
				                 
			              }
			     }
			     else if (mediaTypeFilter=="audio")
			     		{
				     			  if(title != null &amp;&amp; episodeCount > 0)
				              {
					                  audioItemDisplayArray  = pushBackStringArray(audioItemDisplayArray, title + "    (" + episodeCount + ")" );
					                  audioSlugArray             = pushBackStringArray(audioSlugArray, slug);
					                  audioImageUrlArray     = pushBackStringArray(audioImageUrlArray, imageUrl);
					                  audioEpisodeCountArray  = pushBackStringArray(audioEpisodeCountArray, episodeCount);
					                  audioChannelCnt = audioChannelCnt +1;
					                 
				              } 
			     			
			     		}
	              		
		              count += 1;
		              if (count==channelCnt)
		              {
		                   break;
		              }
		         
	            } 
          } 
	      print("channelCnt=: ",channelCnt);
	      print("videoItemDisplay: ",videoItemDisplayArray);
	      print("videoItemDisplay: ",audioItemDisplayArray);
              print(">>>>>>>>>>>>>>>>>>>>>>Have Got  Default ContentSource Channels");
  </getDefaultContentSourceChannels>

  <getLinkedContentSourceChannels>
          print(">>>>>>>>>Ready To Get ContentSource Channels");
          mediaTypeFilter = "AudioVideo";
          md5_string = MD5(sharedKey,tokenId, "true", mediaTypeFilter, "Strip", linkedUserName,contentSourceSlug);
          print("md5 string", md5_string);
          
          url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Channels.GetChannels?app_id="+app_id+"&amp;token=";
          url = url + valtoken;
          url = url + "&amp;capitalizeChannelNames=true";
          url = url + "&amp;mediaType=" + mediaTypeFilter;
          url = url + "&amp;newlineFormat=Strip";
          url = url + "&amp;user_context="  + urlEncode(linkedUserName);
          url = url +"&amp;source="+contentSourceSlug;
          url = url + "&amp;call_sig=";
          url = url + md5_string;
          
          print("url=",url);
          file = loadXMLFile(url);
          cancelIdle();
             if (file == null) 
          {
	            channelCnt = 0;
	            print("Load URL fail ", url);
          }
          else 
          {
	            status = getXMLAttribute("response","status");
          	    print("Status = ", status);
          	    if (status=="ok")
          	    {
          	    	 channelCnt = getXMLElementCount("response", "channels", "channel");
          	    }
          	    else
          	    {
          	    	channelCnt=0;
          	    }
	           
	            print("channelCnt = ", channelCnt);
          }
        
          if (channelCnt &gt; 0) 
          {
		    count=0;
		    
		      if (mediaTypeFilter=="video")
			     {
			     	 bGetVideChannel = 1;
			     	  videoItemDisplayArray = null;
				    videoSlugArray = null;
				    videoImageUrlArray = null;
				    videoEpisodeCountArray = null;
			     }
			 else if (mediaTypeFilter=="audio")
			 	{
			 		 bGetAudioChannel = 1;
		   
				    audioItemDisplayArray=null;
				    audioSlugArray=null;
				    audioImageUrlArray=null;
				    audioEpisodeCountArray=null;
			 	}
	            while(1)
	            {
		              title       = getXMLAttribute("response", "channels", "channel", count, "name");
		              slug        = getXMLAttribute("response", "channels", "channel", count, "slug");
		              imageUrl    = getXMLAttribute("response", "channels", "channel", count, "imageUrl");
		              episodeCount= getXMLAttribute("response", "channels", "channel", count, "episodeCount");
	              
		             if (mediaTypeFilter=="video")
			     {
			     		
				     	   if(title != null &amp;&amp; episodeCount > 0)
			              {
				                  videoItemDisplayArray  = pushBackStringArray(videoItemDisplayArray, title + "    (" + episodeCount + ")" );
				                  videoSlugArray             = pushBackStringArray(videoSlugArray, slug);
				                  videoImageUrlArray     = pushBackStringArray(videoImageUrlArray, imageUrl);
				                  videoEpisodeCountArray  = pushBackStringArray(videoEpisodeCountArray, episodeCount);
				                  videoChannelCnt = videoChannelCnt +1;
				                 
			              } 
			     }
			     else if (mediaTypeFilter=="audio")
			     		{
				     			  if(title != null &amp;&amp; episodeCount > 0)
				              {
					                  audioItemDisplayArray  = pushBackStringArray(audioItemDisplayArray, title + "    (" + episodeCount + ")" );
					                  audioSlugArray             = pushBackStringArray(audioSlugArray, slug);
					                  audioImageUrlArray     = pushBackStringArray(audioImageUrlArray, imageUrl);
					                  audioEpisodeCountArray  = pushBackStringArray(audioEpisodeCountArray, episodeCount);
					                  audioChannelCnt = audioChannelCnt +1;
					                 
				              } 
			     			
			     		}
	              
		              count += 1;
		              if (count==channelCnt)
		              {
		                	break;
		              }
	            } 
          } 
      print("channelCnt=: ",channelCnt);
      print("videoItemDisplay: ",videoItemDisplayArray);
      print("videoItemDisplay: ",audioItemDisplayArray);
      print(">>>>>>>>>>>>>>>>>>>>>>Have Got  Default ContentSource Channels");
  </getLinkedContentSourceChannels>


  
  <deleteDisplayArray>
    /* delete title display channel or episode name tsp */
    delCnt= 0;
    print("----enter deleteDisplayArray----");
    if(displayTitleArray != null)
    {
	      while(displayTitleArray != null &amp;&amp; getStringArrayAt(displayTitleArray,0) != null)
	      {
	        displayTitleArray = deleteStringArrayAt(displayTitleArray,0);
	        delCnt += 1;
	      } 
    }
    print("----displayTitleArray in deleteDisplayArray: ",displayTitleArray, "delCnt:", delCnt);
  </deleteDisplayArray>
  
  <getToken>
    /* read saved token - tp*/
    fileName= getStoragePath("tmp") + "mediaflyToken.dat";
    tokenArray = readStringFromFile(fileName);
    
    valtoken = getStringArrayAt(tokenArray, 0);
    tokenId = getStringArrayAt(tokenArray, 1);
    tokenTime = getStringArrayAt(tokenArray, 2);
    
    print("tokenTime: ",tokenTime);

  if(valtoken == null || tokenTime == null || (getSystemTime() - 3300) &gt; tokenTime)
  {
  	if(tokenArray != null)
        {
          
          tokenArray = deleteStringArrayAt(tokenArray,0);
          tokenArray = deleteStringArrayAt(tokenArray,0);
          tokenArray = deleteStringArrayAt(tokenArray,0);
        }
       url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Authentication.GetToken?app_id="+app_id+"";
       url = url + "&amp;thirdPartyUserID=" + VtunergetMACaddress();
       print("url", url);
      
      file = loadXMLFile(url);

      if (file == null)
      {
  	      print("failed to load ", url);
  	      titleString = "Sign in failed!";
  	      print("call redrawDisplay()");
  	      redrawDisplay();
      }
      else
      {
		        valtoken  = getXMLText("response","token");
		        tokenId   = getXMLAttribute("response","token","id");
		        print("token = ", valtoken);
		        print("token id = ", tokenId);

	        if ( valtoken != null )
	        {
		          storagePathMediaflyToken = getStoragePath("tmp");
		          storagePathMediaflyToken = storagePathMediaflyToken + "mediaflyToken.dat";
		          tokenArray = pushBackStringArray(tokenArray, valtoken);
		          tokenArray = pushBackStringArray(tokenArray, tokenId);
		          tokenArray = pushBackStringArray(tokenArray, getSystemTime());

		          writeStringToFile(storagePathMediaflyToken, tokenArray);
		       
		          print("write to file ", storagePathMediaflyToken);
	        }
      }
   }
  </getToken> 
  
</rss>

