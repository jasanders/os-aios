<?xml version='1.0' ?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">
<bookmark> mediafly_menu_with_favorite </bookmark>

  <onEnter>
      print("OnEnter----------------------mediafly_contentsource_channels.rss");
     
      redrawDisplay();
	
	 
  </onEnter>
  
<!-- get channels -->

  <script>

	  fileName= getStoragePath("tmp") + "mediaflyToken.dat";
     	  tokenArray = readStringFromFile(fileName);
      
      	 valtoken = getStringArrayAt(tokenArray, 0);
      	 tokenId = getStringArrayAt(tokenArray, 1);
      	 tokenTime = getStringArrayAt(tokenArray, 2);
      	 
      	   keyFilePath = getStoragePath("key") + "__mdfly_key.dat";
  	decryptionKeyArray = decFile(keyFilePath);
   
    sharedKey = getStringArrayAt(decryptionKeyArray,0);
    app_id =getStringArrayAt(decryptionKeyArray,1);
  
    print("KeyArray =",decryptionKeyArray);
    print("SharedKey= ", sharedKey);
    print("app_id= ",app_id);
	    
      
      	 print("tokenTime: ",tokenTime);
	  if(valtoken == null || tokenTime == null || (getSystemTime() - 3550) &gt; tokenTime)
	{
			    if(tokenArray != null)
		      {
			        /* delete all elements - tp */
			        tokenArray = deleteStringArrayAt(tokenArray,0);
			        tokenArray = deleteStringArrayAt(tokenArray,0);
			        tokenArray = deleteStringArrayAt(tokenArray,0);
		      }
		      
	      		executeScript("getToken");
	      
	}


  	menuIndex = 0;
  	itemIndex = 0;
	
	current_contentsource_file = getStoragePath("key")+"mdfly_tmpContentSource.dat";
	infoArray = readStringFromFile(current_contentsource_file);
	contentSourceTitle = getStringArrayAt(infoArray,0);
	contentSourceSlug = getStringArrayAt(infoArray,1);
	linkedUserName = getStringArrayAt(infoArray,2);

	print("ContentTile: ",contentSourceTitle);
	print("contentSourceSlug: ",contentSourceSlug);
	print("linkedUserName",linkedUserName);

	contentSourceLogoUrl = "http://csassets.mediafly.com/" +contentSourceSlug+"/appThumb-114x114.fsp";
	print("contentSourceLogoUrl=",contentSourceLogoUrl);

	channelMenuArray = null;
	channelSlugArray = null;
	channelSlug = null;
	channelNum = 0;

	episodeItemArray = null;
	episodeSlugArray = null;
	episodeSlug = null;
	episodeItemNum = 0;

	setRefreshTime(100);
	setFocusItemIndex(0);

  </script>
  
   <onRefresh>
    	print(">>>>>>>>>>>>Refresh Timer");
	executeScript("onGetContentSourceChannel");
	channelSlug = getStringArrayAt(channelSlugArray,0);
	executeScript("onChannel");
	setRefreshTime(-1);
    </onRefresh>

    
	<!--Get Channel for ContentSource-->
 	<onGetContentSourceChannel>
		if (linkedUserName!=null)
		{
			executeScript("getContentSourceChannels");
		}
		else
		{
			executeScript("getDefaultContentSourceChannels");
		}
		redrawDisplay();
 		
 	</onGetContentSourceChannel>

 	
 	<onChannel>
		print("Channel 's ExcuteScript>>>>>>>>>>>>>>");
		
		executeScript("getChannelInfo");
	
 	</onChannel>


 	
 	<onEpisode>
		print("Episode 's ExcuteScript>>>>>>>>>>>>>>"); 
	        episodeSlug = getStringArrayAt(episodeSlugArray, itemIndex);
	        storagePathMediaflyEpisode = getStoragePath("tmp");
	        storagePathMediaflyEpisode = storagePathMediaflyEpisode + "mediaflyEpisode.dat";
	        writeStringToFile(storagePathMediaflyEpisode, episodeSlug);
	        print("The Next Episode Slug is ",episodeSlug);
 		itemLink = "rss_file://./IMS_Modules/Mediafly/mediafly_contentsource_episode.rss";
 		jumpToLink("urlSelection");
 	</onEpisode>

	<urlSelection>
	        <link>
		          <script>
		            	itemLink;
		          </script>
	        </link>
 	</urlSelection> 

<!-- the global onEnter element will be executed when enter or re-enter the page -->
  <mediaDisplay name="threePartsView"
     showDefaultInfo="no"
     autoSelectMenu="no"
     autoSelectItem="no"
     forceFocusOnItem="yes"
     selectMenuOnRight="no"
     

    	
     itemPerPage = "5"
     
     imageParentFocus ="null"
     parentFocusFontColor="200:200:0"
     imageFocus=" "

		
     backgroundColor="28:35:51"
     sideColorLeft="28:35:51"
     sideColorRight="28:35:51"
		
     headerImageXPC = "11.1"
     headerImageYPC = "8"
     headerImageWidthPC = "11"
     headerImageHightPC = "10"
		
     headerCapWidthPC = "0"
     headerWidthPC = "0"

     menuXPC = "0"
     menuYPC = "29"
     menuWidthPC = "31.72"
     menuHeightPC = "10.56"
     menuPerPage = "5"

    menuImageXPC = "0"
    menuImageYPC = "29"
    menuImageWidthPC ="0"
    menuImageHeightPC="0"
    

		
     itemImageXPC = "35"
     itemImageYPC = "27"
     itemImageCapYPC = "1"
     itemImageWidthPC = "0"
     itemImageHeightPC = "0"
                
     itemXPC = "35"
     itemYPC = "28"
     itemWidthPC = "53.67"
     itemHeightPC = "11"
    
     
     itemBackgroundColor="-1:-1:-1"

    
     
     popupXPC="8"
     popupYPC="15"
     popupWidthPC="22.3"
     popupHeightPC="5.5"
     popupFontSize="13"
     popupBorderColor="28:35:51"
     popupForegroundColor="255:255:255"
     popupBackgroundColor="28:35:51"


           idleImageXPC="83.12"
           idleImageYPC="89.58"
           idleImageWidthPC="3.9"
           idleImageHeightPC="5.3"
		
     showHeader="no"
  >


    <idleImage> image/POPUP_LOADING_01.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_02.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_03.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_04.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_05.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_06.fsp </idleImage>
    
   <backgroundDisplay  name=mediafly_background>
		<image offsetXPC=0  offsetYPC= 0 widthPC=100 heightPC=100>
			<script>
				"./IMS_Modules/Mediafly/image/mediafly_bg_01-01.fsp";
			</script>
		</image>
</backgroundDisplay>

		<image offsetXPC=31.7  offsetYPC= 26.11 widthPC=3.52 heightPC=74.03 redraw="no">
			<script>
				"./IMS_Modules/Mediafly/image/mediafly_bg_line01.fsp";
			</script>
		</image>
		
<menuDisplay>

		<image offsetXPC=0 offsetYPC=0 widthPC=100 heightPC=100 useBackgroundSurface=yes>

		<script>
		index1 = getQueryMenuIndex();
		index2 = getFocusMenuIndex();
		if (index1 == index2)
		{
			if (getDrawingItemState() != "focus")
			{
				"./IMS_Modules/Mediafly/image/mediafly_menu_focus.fsp";
			}
			else
			{
				"./IMS_Modules/Mediafly/image/mediafly_menu_inactive.fsp";
			}
		}
		else
		{
			null;
		}
		</script>
		</image>
		<text offsetXPC=28 offsetYPC=10 widthPC=72  heightPC=80 backgroundColor=-1:-1:-1  fontSize=17 >
		<foregroundColor>
			<script>
				fgcolor = "102:102:102";
				queryIndex = getQueryMenuIndex();
				focusIndex = getFocusMenuIndex();
				if (queryIndex == focusIndex) {
					fgcolor = "0:148:13";
				}
				fgcolor;
			</script>
		</foregroundColor>
		
		<script>
			index = getQueryMenuIndex();
			str = getStringArrayAt(channelMenuArray, index);
			str;
		</script>
		</text>
</menuDisplay>

	<!--ContentSource Logo-->
    <image offsetXPC="9.2" offsetYPC="3" widthPC="8.91" heightPC="15.83" redraw="no">
      <script>
   		contentSourceLogoUrl;
      </script>
    </image>
    
    <!--ContentSource Linked User Name-->
     <text offsetXPC="53" offsetYPC="14" widthPC="40" heightPC="5"  fontSize="16" foregroundColor="51:51:51" backgroundColor="-1:-1:-1" align="right">
		      <script>
		      	if (linkedUserName!=null&amp;&amp;linkedUserName!="")
		      	{
		      		 "Welcome!   "+linkedUserName;
		      	}
		        else 
		        {
		        	null;
		        }
		        
		      </script>
    	</text>
    	
	<!--ContentSource Title-->
  <text offsetXPC="9.2" offsetYPC="20" widthPC="40" heightPC="5"  fontSize="18" foregroundColor="255:255:255"
    backgroundColor="-1:-1:-1" align="left"
   >
		      <script>
			    	contentSourceTitle;
		      </script>
    </text>
	
    <onUserInput>
      <script>
      userInput = currentUserInput();
      focusMenuIndex = getFocusMenuIndex();
      focusItemState = getDrawingItemState();
      print("--------------mediaDisplay-------onUserInput---------");
      print("Input:", userInput);
      print("focusMenuIndex: ", focusMenuIndex, "focusItemState: ",focusItemState);

      ret = "false";

      if (userInput == "right"  &amp;&amp; focusItemState == "focus")
        	ret = "true"; /* do nothing here */
        	
      /* block left key */
      if (userInput == "left"  &amp;&amp; focusItemState != "focus")
        	ret = "true"; /* do nothing here */
        	
      if(focusItemState != "focus" &amp;&amp; (userInput == "up" || userInput == "down"))
      {
          if(episodeItemNum &gt; 0)
          {
            episodeItemNum = 0;
            showIdle();
            redrawDisplay();
            cancelIdle();
          }
      }
	

      print("exit onUserInput ret: ", ret);
      ret;
    </script>      
    </onUserInput>
    
    <script>
      print("------------------MediaDisplay---OnUserInput-----Script--------------");
      focusItemState = getDrawingItemState();
      focusMenuIndex = getFocusMenuIndex();
      print("bGotChannels: ",bGotChannels, "focusItemState :", focusItemState);
      
    </script>

  
    

    
	    <itemDisplay>
		<image offsetXPC=0 offsetYPC=0 widthPC=100 heightPC=100>
			<script>
			index1 = getQueryItemIndex();
			index2 =getFocusItemIndex ();
			if (index1 == index2)
			{
				if (getDrawingItemState() == "focus")
				{
					"./IMS_Modules/Mediafly/image/mediafly_menuitem_focus.fsp";
				}
				else
				{
					"./IMS_Modules/Mediafly/image/mediafly_menuitem_unfocus.fsp";
				}
			}
			else
			{
				"./IMS_Modules/Mediafly/image/mediafly_menuitem_unfocus.fsp";
			}
			
			</script>
		</image>
			<text offsetXPC=5 offsetYPC=10 widthPC=90 heightPC=80 backgroundColor=-1:-1:-1  fontSize=17 >
			<foregroundColor>
				<script>
					fgcolor = "102:102:102";
					queryIndex = getQueryItemIndex();
					focusIndex = getFocusItemIndex();
					if (queryIndex == focusIndex) {
						fgcolor = "0:148:13";
					}
					fgcolor;
				</script>
			</foregroundColor>
			
			<script>
				index = getQueryItemIndex();
				str = getStringArrayAt(episodeItemArray , index);
				str;
			</script>
			</text>
	</itemDisplay>
	<!--The Sliding bar Indicator-->
	<image  redraw=yes offsetXPC=91.48  offsetYPC=30 widthPC=0.55 heightPC=51>
		<script>
			if (getDrawingItemState() =="focus"&amp;&amp;episodeItemNum&gt;0)
			{
				"./IMS_Modules/Mediafly/image/sliding_bar.fsp";
			}
			else
			{
				null;
			}
			
		</script>
	</image>
	
	<!--The Sliding Indicator-->
	<image redraw=yes offsetXPC=91.48   widthPC=0.55 >
		<offsetYPC>
			<script>
				focusIndex = getFocusItemIndex();
				if (episodeItemNum &gt; 0)
				{
					unitH = 51/episodeItemNum;
					offset = Add(30, focusIndex*unitH);
				}
			</script>
		</offsetYPC>
		<heightPC>
			<script>
				
				if (episodeItemNum &gt; 0)
				{
					Height = 51/episodeItemNum;
					
				}
			</script>
		</heightPC>
		<script>
			if (getDrawingItemState() =="focus"&amp;&amp;episodeItemNum&gt;0)
			{
				"./IMS_Modules/Mediafly/image/sliding.fsp";;
			}
			else
			{
				null;
			}
		</script>
	</image>
    
 </mediaDisplay>


<menu_template>
	<onClick>
		 
		menuIndex = getFocusMenuIndex();
		print("menuIndex=",menuIndex);
		channelSlug = getStringArrayAt(channelSlugArray,menuIndex);
		print("The channelSlug : ",channelSlug);
		executeScript("onChannel");
		redrawDisplay();
  		null;
	</onClick>
	
</menu_template>

<urlSelection>
        <link>
          <script>
            mLink;
          </script>
        </link>
 </urlSelection>   
  
     <item_template>
  
    <onClick>
      <script>
      	itemIdex = getFocusItemIndex();
      	print("ItemIndex=",itemIndex);
        print("execute", onClickItemScript);
    	executeScript("onEpisode");
    	
    	null;
      </script>
    </onClick>
    
   

    <media:thumbnail>
      <script>
        getStringArrayAt(imageUrlArray , -1);
      </script>
    </media:thumbnail>
    
   
  </item_template>
  
 
  
  <channel>
  
	<title></title>
	 <!--<link>rss_file://./IMS_Modules/Mediafly/mediafly_menu.rss</link> -->
    null;

    
    <itemSize>
      <script>
        	episodeItemNum;
      </script>
    </itemSize>
    
    <menuSize>
	<script>
		channelNum;
	</script>
     </menuSize>

  </channel>


 
   <getChannelInfo>
  	print(">>>>>>>>>>>>>>>>>>>Ready to getChannel's Information");
  	inclAttrParam = "title,description,imageUrl,channel,published,url,mediaType";
  	idParam = VtunergetMACaddress();
  	
	if (linkedUserName!=null)
	{
		md5_string = MD5(sharedKey,tokenId,channelSlug, inclAttrParam,contentSourceSlug,linkedUserName);
		 url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Channels.GetChannel?app_id="+app_id+"&amp;token=";
		 url = url + valtoken;
		 url = url + "&amp;channelSlug=" + channelSlug;
		 url = url + "&amp;includeAttributes=" + inclAttrParam;
		 url = url + "&amp;user_context="+ linkedUserName;
		 url = url +"&amp;source="+contentSourceSlug;
		 url = url + "&amp;call_sig=";
		 url = url + md5_string;
	}
	else
	{
		md5_string = MD5(sharedKey,tokenId,channelSlug, inclAttrParam,contentSourceSlug);
		
		 url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Channels.GetChannel?app_id="+app_id+"&amp;token=";
	         url = url + valtoken;
	         url = url + "&amp;channelSlug=" + channelSlug;
	         url = url + "&amp;includeAttributes=" + inclAttrParam;
	         url = url +"&amp;source="+contentSourceSlug;
	         url = url + "&amp;call_sig=";
	         url = url + md5_string;
	}
	

    print("md5 string", md5_string);
    itemCnt = 0;

    print("url = ", url);

    file = loadXMLFile(url);
    if (file == null)
    {
    	episodeItemNum = 0;
      	print("Load URL fail ", url);
    }
    else
    {
	      status = getXMLAttribute("response", "status");
	      print("status = ", status);
	      episodeItemNum = getXMLElementCount("response", "channel", "episode");
	      print("episodeItemNum = ", episodeItemNum);
    }
    if(status == "fail")
    {
	      err =  getXMLAttribute("response", "err", "message");
	      print ("error", err);
    }
    else if (episodeItemNum &gt; 0)
    {
	      count=0;

	      while(1)
	      {
		        slug        = getXMLAttribute("response", "channel", "episode", count, "slug");
		        imageUrl = getXMLAttribute("response", "channel", "episode",  count,"imageUrl");
		        episodeTitle = getXMLAttribute("response", "channel", "episode", count, "title");
		        channel      = getXMLAttribute("response", "channel", "episode", count, "channel");
		        published    =  getXMLAttribute("response", "channel", "episode", count,"published");
		        description  =  getXMLAttribute("response", "channel", "episode", count,"description");
		        episodeUrl   = getXMLAttribute("response", "channel", "episode", count,"url");
		        mediaType = getXMLAttribute("response", "channel", "episode", count,"mediaType");
		        
		        if(slug != null &amp;&amp; slug != "" &amp;&amp; episodeUrl != null)
		        {
		        	  episodeItemArray   =  pushBackStringArray(episodeItemArray,episodeTitle);
			          episodeSlugArray   =  pushBackStringArray(episodeSlugArray, slug);
			          
			          imageUrlArray = pushBackStringArray(imageUrlArray,imageUrl);
			          episodeUrlArray = pushBackStringArray(episodeUrlArray,episodeUrl);
			          
			          channelArray = pushBackStringArray(channelArray,channel);
			          episodeMediaTypeArray = pushBackStringArray(episodeMediaTypeArray,mediaType);
			          
			          publishedArray = pushBackStringArray(publishedArray,published);
			          
			          description = description + " ";
			          descriptionArray = pushBackStringArray(descriptionArray,description);
		          
		           	

		        }
		        count += 1;
		        if (count == episodeItemNum)
			    {
			    	break;
			    }
	      } 
	}
	print(">>>>>>>>>>>>>>>>>>>Have Got Channel-Episode's Information");
  </getChannelInfo>
  


  <getDefaultContentSourceChannels>
          print(">>>>>>>>>Ready To Get Default ContentSource Channels");
          mediaTypeFilter = "AudioVideo";
          print("mediaTypeFilter:",mediaTypeFilter);
          
          md5_string = MD5(sharedKey,tokenId, "true", mediaTypeFilter, "Strip", "__default__",contentSourceSlug);
          print("md5 string", md5_string);
          url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Channels.GetChannels?app_id="+app_id+"&amp;token=";
          url = url + valtoken;
          url = url + "&amp;capitalizeChannelNames=true";
          url = url + "&amp;mediaType=" + mediaTypeFilter;
          url = url + "&amp;newlineFormat=Strip";
          url = url + "&amp;user_context=__default__";
          url = url +"&amp;source="+contentSourceSlug;
          url = url + "&amp;call_sig=";
          url = url + md5_string;
          print("url=",url);
          file = loadXMLFile(url);
          cancelIdle();
          if (file == null) 
          {
	            channelNum = 0;
	            print("Load URL fail ", url);
          }
          else 
          {
	            channelNum = getXMLElementCount("response", "channels", "channel");
	            print("channelNum = ", channelNum);
          }
        
          if (channelNum &gt; 0) 
          {
		    count=0;
	            while(1)
	            {
		              title       = getXMLAttribute("response", "channels", "channel", count, "name");
		              slug        = getXMLAttribute("response", "channels", "channel", count, "slug");
		              imageUrl    = getXMLAttribute("response", "channels", "channel", count, "imageUrl");
		              episodeCount= getXMLAttribute("response", "channels", "channel", count, "episodeCount");
	              
		              if(title != null &amp;&amp; episodeCount > 0)
		              {
			                  channelMenuArray  = pushBackStringArray(channelMenuArray, title + "    (" + episodeCount + ")" );
			                  channelSlugArray     = pushBackStringArray(channelSlugArray, slug);
			                  channelImageUrlArray = pushBackStringArray(channelImageUrlArray, imageUrl);
			                  channelEpisodeCountArray   = pushBackStringArray(channelEpisodeCountArray, episodeCount);
			                 
		              } 
	              
		              count += 1;
		              if (count==channelNum)
		              {
		                break;
		              }
	            } 
          } 
          
          print(">>>>>>>>>>>>>>>>>>>>>>Have Got  Default ContentSource Channels");
  </getDefaultContentSourceChannels>
  
 <getContentSourceChannels>
          print(">>>>>>>>>Ready To Get ContentSource Channels");
          mediaTypeFilter = "AudioVideo";
          md5_string = MD5(sharedKey,tokenId, "true", mediaTypeFilter, "Strip", linkedUserName,contentSourceSlug);
          print("md5 string", md5_string);
          
          url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Channels.GetChannels?app_id="+app_id+"&amp;token=";
          url = url + valtoken;
          url = url + "&amp;capitalizeChannelNames=true";
          url = url + "&amp;mediaType=" + mediaTypeFilter;
          url = url + "&amp;newlineFormat=Strip";
          url = url + "&amp;user_context="  + urlEncode(linkedUserName);
          url = url +"&amp;source="+contentSourceSlug;
          url = url + "&amp;call_sig=";
          url = url + md5_string;
          
          print("url=",url);
          file = loadXMLFile(url);
          cancelIdle();
             if (file == null) 
          {
	            channelNum = 0;
	            print("Load URL fail ", url);
          }
          else 
          {
	            channelNum = getXMLElementCount("response", "channels", "channel");
	            print("channelNum = ", channelNum);
          }
        
          if (channelNum &gt; 0) 
          {
		    count=0;
	            while(1)
	            {
		              title       = getXMLAttribute("response", "channels", "channel", count, "name");
		              slug        = getXMLAttribute("response", "channels", "channel", count, "slug");
		              imageUrl    = getXMLAttribute("response", "channels", "channel", count, "imageUrl");
		              episodeCount= getXMLAttribute("response", "channels", "channel", count, "episodeCount");
	              
		              if(title != null &amp;&amp; episodeCount > 0)
		              {
			                  channelMenuArray  = pushBackStringArray(channelMenuArray, title + "    (" + episodeCount + ")" );
			                  channelSlugArray     = pushBackStringArray(channelSlugArray, slug);
			                  channelImageUrlArray = pushBackStringArray(channelImageUrlArray, imageUrl);
			                  channelEpisodeCountArray   = pushBackStringArray(channelEpisodeCountArray, episodeCount);
			                 
		              } 
	              
		              count += 1;
		              if (count==channelNum)
		              {
		                break;
		              }
	            } 
          } 
      print("channelNum=: ",channelNum);
      print("channelMenuArray: ",channelMenuArray);
      print(">>>>>>>>>>>>>>>>>>>>>>Have Got  Default ContentSource Channels");
  </getContentSourceChannels>

  <getToken>
    /* read saved token - tp*/
    fileName= getStoragePath("tmp") + "mediaflyToken.dat";
    tokenArray = readStringFromFile(fileName);
    
    valtoken = getStringArrayAt(tokenArray, 0);
    tokenId = getStringArrayAt(tokenArray, 1);
    tokenTime = getStringArrayAt(tokenArray, 2);
    
    print("tokenTime: ",tokenTime);

  if(valtoken == null || tokenTime == null || (getSystemTime() - 3300) &gt; tokenTime)
  {
  	if(tokenArray != null)
        {
          
          tokenArray = deleteStringArrayAt(tokenArray,0);
          tokenArray = deleteStringArrayAt(tokenArray,0);
          tokenArray = deleteStringArrayAt(tokenArray,0);
        }
       url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Authentication.GetToken?app_id="+app_id;
       url = url + "&amp;thirdPartyUserID=" + VtunergetMACaddress();
       print("url", url);
      
      file = loadXMLFile(url);

      if (file == null)
      {
  	      print("failed to load ", url);
  	      titleString = "Sign in failed!";
  	      print("call redrawDisplay()");
  	      redrawDisplay();
      }
      else
      {
		        valtoken  = getXMLText("response","token");
		        tokenId   = getXMLAttribute("response","token","id");
		        print("token = ", valtoken);
		        print("token id = ", tokenId);

	        if ( valtoken != null )
	        {
		          storagePathMediaflyToken = getStoragePath("tmp");
		          storagePathMediaflyToken = storagePathMediaflyToken + "mediaflyToken.dat";
		          tokenArray = pushBackStringArray(tokenArray, valtoken);
		          tokenArray = pushBackStringArray(tokenArray, tokenId);
		          tokenArray = pushBackStringArray(tokenArray, getSystemTime());

		          writeStringToFile(storagePathMediaflyToken, tokenArray);
		       
		          print("write to file ", storagePathMediaflyToken);
	        }
      }
   }
  </getToken> 
  
</rss>

