<?xml version='1.0' ?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">

<bookmark> Mediafly search </bookmark>

<!-- the global onEnter element will be executed when enter or re-enter the page -->
  <onEnter>
    print("on enter mediafly_search.ress");
  </onEnter>
  
  <!-- the global script element will be executed only once when the page start -->
  <script>

	keyFilePath = getStoragePath("key") + "__mdfly_key.dat";
	decryptionKeyArray = decFile(keyFilePath);
   	sharedKey = getStringArrayAt(decryptionKeyArray,0);
   	app_id =getStringArrayAt(decryptionKeyArray,1);
  
    print("KeyArray =",decryptionKeyArray);
    print("SharedKey= ", sharedKey);
    print("app_id= ",app_id);
	    
    storagePathMediaflySearch = getStoragePath("tmp");
    storagePathMediaflySearch = storagePathMediaflySearch + "mediaflySearch.dat";
    term = readStringFromFile(storagePathMediaflySearch);
    print("search readStringFromFile", term);
    
    /* search video and audio for now

    filter = getEnv("mdflyfilter");
    if(filter == null)
    */
    filter = "video,audio";
    print("filter: ", filter);

   
    searchTypeArray = null;

    storagePathdefaultUserName = getStoragePath("key") + "mdfly_defaultusername.dat";
    defaultUserName = readStringFromFile(storagePathdefaultUserName);
    if(defaultUserName == null || defaultUserName == "")
    {
      /* set the rss base on default user */
      itemEpisodeLink = "rss_file://./IMS_Modules/Mediafly/mediafly_episode_no_user.rss";
      defaultUserName = VtunergetMACaddress(); /* get some info tsp */
      defaultUser  = "false";
    }
    else itemEpisodeLink = "rss_file://./IMS_Modules/Mediafly/mediafly_episode.rss";

    itemShowLink = "rss_file://./IMS_Modules/Mediafly/mediafly_channel_episodes.rss";
    
    if(defaultUserName == null || defaultUserName == "")
      defaultUserName = "001075FF0090"; /* use to get tokenId only */

    if (term != null) 
    {
	      print("search term", term);
	      encodedT = urlEncode(term);

	      /* read saved token - tp*/
	      fileName= getStoragePath("tmp") + "mediaflyToken.dat";
	      tokenArray = readStringFromFile(fileName);
	      valtoken = getStringArrayAt(tokenArray, 0);
	      tokenId = getStringArrayAt(tokenArray, 1);
	      tokenTime = getStringArrayAt(tokenArray, 2);
	      print("tokenTime: ",tokenTime);

	      if(valtoken == null || tokenTime == null || (getSystemTime() - 3300) &gt; tokenTime)
	      {
		        if(tokenArray != null)
		        {
		          /* delete all elements - tp */
		          tokenArray = deleteStringArrayAt(tokenArray,0);
		          tokenArray = deleteStringArrayAt(tokenArray,0);
		          tokenArray = deleteStringArrayAt(tokenArray,0);
		        }
		        
		        url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Authentication.GetToken?app_id="+app_id;
		        url = url + "&amp;thirdPartyUserID=" + defaultUserName; 
		        print("url", url);
		        file = loadXMLFile(url);

		        if (file == null)
		        {
		          print("failed to load ", url);
		          titleString = "Sign in failed!";
		          redrawDisplay();
		        }
		        else
		        {
		          valtoken  = getXMLText("response","token");
		          tokenId   = getXMLAttribute("response","token","id");
		          print("token = ", valtoken);
		          print("token id = ", tokenId);
		          
		            tokenArray = pushBackStringArray(tokenArray, valtoken);
		            tokenArray = pushBackStringArray(tokenArray, tokenId);
		            tokenArray = pushBackStringArray(tokenArray, getSystemTime() );

		            storagePathMediaflyToken = getStoragePath("tmp") + "mediaflyToken.dat";
		            writeStringToFile(storagePathMediaflyToken, tokenArray);
		            print("token", tokenArray);
		            print("write to file ", storagePathMediaflyToken);
		          
		          
		        }
	      } /* if(tokenTime == null... */
    


	    searchType = "All";
	    md5_string = MD5(sharedKey,tokenId,searchType,"100",encodedT,filter,"Strip");
	    urlSearch = "http://api.mediafly.com/api/rest/2.0/Mediafly.Search.Query?app_id="+app_id+"&amp;token=";
	    urlSearch = urlSearch + valtoken;
	    urlSearch = urlSearch + "&amp;searchType="+searchType;
	    urlSearch = urlSearch + "&amp;limit=20";
	    urlSearch = urlSearch + "&amp;term=" + encodedT;
	    urlSearch = urlSearch + "&amp;mediaType=" + filter;
	    urlSearch = urlSearch + "&amp;newlineFormat=Strip";
	    urlSearch = urlSearch + "&amp;call_sig=";
	    urlSearch = urlSearch + md5_string;

	    print("urlSearch", urlSearch);

	    file = loadXMLFile(urlSearch);
	    if (file == null) 
	    {
		      itemSize = 0;
		      print("Load URL fail ", urlSearch);
	    }
	    else 
	    {
		    
		      showSize = getXMLElementCount("response", "searchResults", "show");
		      episodeSize = getXMLElementCount("response", "searchResults", "episode");
		      itemSize = Add(showSize, episodeSize);
		      print("Item Size = ", itemSize);
	    }
	    if (showSize &gt; 0) 
	    {
		      count=0;
		      showslugArray = null;
		      itemSizeReal = 0;
		        while(1)
		        {
			          slug       = getXMLAttribute("response", "searchResults", "show", count, "slug");
			          title       = getXMLAttribute("response", "searchResults", "show", count, "title");
			          imageUrl       = getXMLAttribute("response", "searchResults", "show", count, "imageUrl");
			          episodeUrl       = getXMLAttribute("response", "searchResults", "show", count, "url");
			          description       = getXMLAttribute("response", "searchResults", "show", count, "description");
			          published =  getXMLAttribute("response", "searchResults", "show",count, "published");
			          mediaType = getXMLAttribute("response", "searchResults", "show",count, "mediaType");

			          if(title != null &amp;&amp; title != "")
			          {
			              showSlugArray     = pushBackStringArray(showSlugArray, slug);
			              showTitleArray    = pushBackStringArray(showTitleArray, title);
			              showImageUrlArray = pushBackStringArray(showImageUrlArray, imageUrl);
			              showMediaTypeArray = pushBackStringArray(showMediaTypeArray, mediaType);
			              showEpisodeUrlArray = pushBackStringArray(showEpisodeUrlArray, episodeUrl);
			              showDescriptionArray = pushBackStringArray(showDescriptionArray,description);
			              showPublishedArray = pushBackStringArray(showPublishedArray,published);
			              searchTypeArray = pushBackStringArray(searchTypeArray,"Show");
			              
			              if(mediaType == "Audio")
			              		showImageMediaTypeArray = pushBackStringArray(showImageMediaTypeArray, "./IMS_Modules/Mediafly/image/mdfly_audio.fsp");
			              else 
			              		showImageMediaTypeArray = pushBackStringArray(showImageMediaTypeArray, "./IMS_Modules/Mediafly/image/mdfly_video.fsp");
			              		
			              itemSizeReal += 1;
			              description = description + " ";
			              print("description:",description);
			              print("slug:",slug);
			              print("mediaType: ",mediaType);
			          } 
			          count += 1;
			          if (count==showSize)
			          {
			            	break;
			          }
		        } 
	    } 

	      if (episodeSize &gt; 0) 
	    {
		      count=0;
		      slugArray = null;
		    
		        while(1)
		        {
			          slug       = getXMLAttribute("response", "searchResults", "episode", count, "slug");
			          title       = getXMLAttribute("response", "searchResults", "episode", count,  "title");
			          imageUrl       = getXMLAttribute("response", "searchResults", "episode", count, "imageUrl");
			          episodeUrl       = getXMLAttribute("response", "searchResults", "episode", count, "url");
			          description       = getXMLAttribute("response", "searchResults","episode", count, "description");
			          published =  getXMLAttribute("response", "searchResults", "episode", count, "published");
			          mediaType = getXMLAttribute("response", "searchResults", "episode", count, "mediaType");

			          if(title != null &amp;&amp; title != "")
			          {
			              episodeSlugArray     = pushBackStringArray(episodeSlugArray, slug);
			              episodeTitleArray    = pushBackStringArray(episodeTitleArray, title);
			              episodeImageUrlArray = pushBackStringArray(episodeImageUrlArray, imageUrl);
			              episodeMediaTypeArray = pushBackStringArray(episodeMediaTypeArray, mediaType);
			              episodeUrlArray = pushBackStringArray(episodeUrlArray, episodeUrl);
			              episodeDescriptionArray = pushBackStringArray(episodeDescriptionArray,description);
			              episodePublishedArray = pushBackStringArray(episodePublishedArray,published);
			              searchTypeArray = pushBackStringArray(searchTypeArray,"Episode");
			              
			              if(mediaType == "Audio")
			              		episodeImageMediaTypeArray = pushBackStringArray(episodeImageMediaTypeArray, "./IMS_Modules/Mediafly/image/mdfly_audio.fsp");
			              else 
			              		episodeImageMediaTypeArray = pushBackStringArray(episodeImageMediaTypeArray, "./IMS_Modules/Mediafly/image/mdfly_video.fsp");

			              itemSizeReal += 1;
			              
			              description = description + " ";
			              print("description:",description);
			              print("slug:",slug);
			              print("mediaType: ",mediaType);
			          }
			          count += 1;
			          print("count=",count);
			          
			          print("episodeSize=",episodeSize);
			          
			          if (count==episodeSize)
			          {
			            	break;
			          }
		        } 
	    } 

	    
	     print("imageMediaTypeArray: ",episodeImageMediaTypeArray);
	     print("itemSizeReal: ", itemSizeReal);

	     slugArray =  showSlugArray +episodeSlugArray;
	     titleArray  = showTitleArray + episodeTitleArray;
	     imageUrlArray  = showImageUrlArray + episodeImageUrlArray;
	     mediaTypeArray  = showMediaTypeArray + episodeMediaTypeArray;
	     imageMediaTypeArray = showImageMediaTypeArray+episodeImageMediaTypeArray;



	     menuArray = null;
	     menuArray  = pushBackStringArray(menuArray, "$[ALL]");
	     menuArray  = pushBackStringArray(menuArray, "$[Shows]");
	     menuArray  = pushBackStringArray(menuArray, "$[Episodes]");
	     menuSize = 3;
	     setFocusMenuIndex(0);
			 
	  } 
	  
	  EntryTimes = 0;

</script>


<!-- mediaDisplay element describe the display properties of the page -->
 <mediaDisplay name="threePartsView" selectMenuOnRight="no"
    		showDefaultInfo="no"
		autoSelectMenu=no
		autoSelectItem=no
		forceFocusOnItem=yes
    
		
	        itemPerPage="5"
	     
       	        imageFocus=" "
	        imageParentFocus ="null"
	        parentFocusFontColor="255:255:0"
  

		sideLeftWidthPC= 0
		sideRightWidthPC= 100
		sideTopHeightPC= 0
		sideBottomHeightPC= 0
		
		backgroundColor=28:35:51
		sideColorLeft=28:35:51 
		sideColorRight=28:35:51
		
		headerImageXPC = 11.1
		headerImageYPC = 8
		headerImageWidthPC = 11
		headerImageHightPC = 10
		headerCapWidthPC = 0
		headerWidthPC = 0

		menuXPC = "72"
     		menuYPC = "26.4"
     		menuWidthPC = "31.72"
     		menuHeightPC = "10.56"
     		menuPerPage = "5"

   	        menuImageXPC = "8"
                menuImageYPC = "25.7"
                menuImageWidthPC ="0"
                menuImageHeightPC="0"
		
		itemImageXPC = 13.7
		itemImageYPC = 32
		itemImageCapYPC = 3.5
		itemImageWidthPC = 5.58
		itemImageHeightPC = 9.9
		
		itemXPC = 22
		itemYPC = 31.5
		itemWidthPC = 45
		itemHeightPC =10.8
		
                showHeader = "no"
		itemBackgroundColor="-1:-1:-1"
		itemGap = "1.8"
		
		popupXPC=8
		popupYPC=15
		popupWidthPC=22.3
		popupHeightPC=5.5
		popupFontSize=13
		popupBorderColor=28:35:51 
		popupForegroundColor=255:255:255
		popupBackgroundColor=28:35:51 

	       idleImageXPC=83.12
	       idleImageYPC=89.58
	       idleImageWidthPC=3.1
	       idleImageHeightPC=5.5

    >

    <idleImage> image/POPUP_LOADING_01.fsp </idleImage>
		<idleImage> image/POPUP_LOADING_02.fsp </idleImage>
		<idleImage> image/POPUP_LOADING_03.fsp </idleImage>
		<idleImage> image/POPUP_LOADING_04.fsp </idleImage>
		<idleImage> image/POPUP_LOADING_05.fsp </idleImage>
		<idleImage> image/POPUP_LOADING_06.fsp </idleImage>


    <script>
      curIndex = getFocusItemIndex();
      if(curIndex &lt; 0)
      {curIndex = 0;}
      datePub = "$[Date Published ]" + " " + getStringArrayAt(publishedArray , curIndex );
      if(getPageInfo("itemCount") &lt; 1)
      {datePub = "$[No Episode Found]";}

    </script>

    
  	<backgroundDisplay  name=mediafly_search_background>
		<image offsetXPC=0  offsetYPC= 0 widthPC=100 heightPC=100>
			<script>
				"./IMS_Modules/Mediafly/image/mediafly_bg_02-01.fsp";
			</script>
		</image>
	</backgroundDisplay>

		<image offsetXPC=6.8  offsetYPC= 2.64 widthPC=26.56 heightPC=15.69 redraw="no">
			<script>
				"./IMS_Modules/Mediafly/image/mediafly-logo-and-text-med.fsp";
			</script>
		</image>

		<image offsetXPC=68.59  offsetYPC= 26.11 widthPC=3.52 heightPC=74.03 redraw="no">
			<script>
				"./IMS_Modules/Mediafly/image/mediafly_bg_line02.fsp";
			</script>
		</image>

		  <menuDisplay>
			<image offsetXPC=0 offsetYPC=0 widthPC=100 heightPC=100 useBackgroundSurface=yes>
			<script>
			index1 = getQueryMenuIndex();
			index2 = getFocusMenuIndex();
			if (index1 == index2)
			{
				print(getDrawingItemState() );
				if (getDrawingItemState() == "inactive")
				{
					"./IMS_Modules/Mediafly/image/mediafly_menu_focus.fsp";
				}
				else
				{
					"./IMS_Modules/Mediafly/image/mediafly_menu_inactive.fsp";
				}
			}
			else
			{
				null;
			}
			</script>
			</image>
			<text offsetXPC=8 offsetYPC=10 widthPC=84  heightPC=80 backgroundColor=-1:-1:-1  fontSize=17 >
			<foregroundColor>
				<script>
					fgcolor = "102:102:102";
					queryIndex = getQueryMenuIndex();
					focusIndex = getFocusMenuIndex();
					if (queryIndex == focusIndex) {
						fgcolor = "0:148:13";
					}
					fgcolor;
				</script>
			</foregroundColor>
			
			<script>
				index = getQueryMenuIndex();
				str = getStringArrayAt(menuArray,index);
				str;
			</script>
			</text>
	</menuDisplay>

    
	
    <!-- background color of short story section -->
    <!-- display additional for current focus show on the bottom row -->
    <!-- the short story -->
	
  <text offsetXPC="53" offsetYPC="14" widthPC="40" heightPC="5"  fontSize="16" foregroundColor="51:51:51" backgroundColor="-1:-1:-1" align="right">
		      <script>
		      	if (defaultUser!="false")
		      	{
		      		 "Welcome!   "+defaultUserName;
		      	}
		        else 
		        {
		        	null;
		        }
		        
		      </script>
    	</text>
    	
  <text offsetXPC="18.2" offsetYPC="20" widthPC="40" heightPC="5"  fontSize="18" foregroundColor="255:255:255"
    backgroundColor="-1:-1:-1" align="left"
   >
	   <script>
	   	"Search:  "+term;
	   </script>
    </text>
<!--
    <text offsetXPC= "7.8"  offsetYPC= "72" widthPC="73" heightPC="2.5"  fontSize="10"
    foregroundColor="38:22:93"
    redraw=yes useBackgroundSurface=yes>
      <script>
        datePub;
      </script>
    </text>

    <text offsetXPC= "7.8"  offsetYPC= "74.5" widthPC="73" heightPC="11.3"  fontSize="10" lines="4"
    foregroundColor="38:22:93"
    redraw=yes useBackgroundSurface=yes>
      <script>
        curIndex = getFocusItemIndex();
        if(curIndex &lt; 0)
        {curIndex = 0;}
        getStringArrayAt(descriptionArray , curIndex );
      </script>
    </text>

-->
    <!-- image of the story -->
    <!--
    <image offsetXPC= "85"  offsetYPC= "73" widthPC="8" heightPC="12" redraw="yes">
      <script>
        curIndex = getFocusItemIndex();
        if(curIndex &lt; 0)
        {curIndex = 0;}
        getStringArrayAt(imageUrlArray , curIndex );
      </script>
    </image>
  -->

    <onUserInput>
       currentUserInput = currentUserInput();
        print("user input: ", currentUserInput);
        majorContext = getPageInfo("majorContext");
        itemFocusState = getDrawingItemState();
        ret = "false";
        
	if (majorContext=="items")
	{
		 if(currentUserInput == "right" &amp;&amp; itemFocusState == "focus")
		{
			postMessage("left");
			ret = "true";
				      		
		}
		if (currentUserInput == "enter")
	        {
	        	     itemIndex = getFocusItemIndex();
	        	     
			     if (searchType=="All")
		        {
		        	
		        	type = getStringArrayAt(searchTypeArray,itemIndex);
		        	if (type =="Show")
		        		{
		        			itemLink = itemShowLink;
		        			showSlug = getStringArrayAt(slugArray,itemIndex);
		        			
		        		}
		        	else
		        		{
			        		itemLink = itemEpisodeLink;
			        		episodeSlug = getStringArrayAt(slugArray,itemIndex);
		        		}
		        }
		        else if (searchType=="Show")
		        	{
		        		itemLink = itemShowLink;
		        		showSlug = getStringArrayAt(showSlugArray,itemIndex);
		        		type = "Show";
		        	}
		        	else
		        		{
		        			itemLink = itemEpisodeLink;
		        			episodeSlug = getStringArrayAt(episodeSlugArray,itemIndex);
		        			type="Episode";
		        		}

		        if (type=="Show")
		        {
		        	      print("enter Go to Show menu");
				      storagePathMediaflyShow = getStoragePath("tmp") + "mediaflyshowSlug.dat";
				      writeStringToFile(storagePathMediaflyShow,showSlug);
		        }
		        else
		        {
		        		  storagePathMediaflyEpisode = getStoragePath("tmp");
				          storagePathMediaflyEpisode = storagePathMediaflyEpisode + "mediaflyEpisode.dat";
				          writeStringToFile(storagePathMediaflyEpisode, episodeSlug);
		        
		        }
	        	
		          EntryTimes = EntryTimes + 1;
		          print("selected episode slug: ", episodeSlug);
		           print("selected show slug: ", showSlug);
	        }     
	}
	else 
	{
		 if(currentUserInput == "left"&amp;&amp; itemFocusState == "inactive")
		{
			postMessage("right");
			ret = "true";
			      		
		}
		
		if (getPageInfo("majorContext") == "menu" &amp;&amp; currentUserInput == "down")
		  {
	  		focusIndex = getFocusMenuIndex();
	  		print("focusIndex: ", focusIndex);
	  		menuTitle = getStringArrayAt(menuArray, Add(focusIndex,1));
	  		if (menuTitle == null || menuTitle == "")
	  		{
	  			ret = "true";
	  		}
		  }
		
	}

           
        ret;
  </onUserInput>
  
   <itemDisplay>
   		
		<image offsetXPC=0 offsetYPC=0 widthPC=100 heightPC=100>
			<script>
			index1 = getQueryItemIndex();
			index2 =getFocusItemIndex ();
			if (index1 == index2)
			{
				if (getDrawingItemState() == "focus")
				{
					"./IMS_Modules/Mediafly/image/mediafly_channelepisodes_focus.fsp";
				}
				else
				{
					"./IMS_Modules/Mediafly/image/mediafly_channelepisodes_unfocus.fsp";
				}
			}
			else
			{
				"./IMS_Modules/Mediafly/image/mediafly_channelepisodes_unfocus.fsp";
			}
			
			</script>
		</image>
		
		  <image offsetXPC= "2"  offsetYPC= "33" widthPC="3" heightPC="34" align="left">
		        <script>
		          getStringArrayAt(imageMediaTypeArray , -1);
		        </script>
	     	 </image>
	     	 
		<text offsetXPC= 5 offsetYPC=10 widthPC=90 heightPC=80 backgroundColor=-1:-1:-1  fontSize=17 >
			<foregroundColor>
				<script>
					fgcolor = "102:102:102";
					queryIndex = getQueryItemIndex();
					focusIndex = getFocusItemIndex();
					if (queryIndex == focusIndex) {
						fgcolor = "0:148:13";
					}
					fgcolor;
				</script>
			</foregroundColor>
			
			<script>
				index = getQueryItemIndex();
				str =  getStringArrayAt(titleArray , index);
				str;
			</script>
		</text>
			
	</itemDisplay>

      <!-- top indicator -->
    <image offsetXPC="15.5" offsetYPC="29" widthPC="1.41" heightPC="1.94" redraw="yes" useBackgroundSurface=yes>
      <script>
        index = getFocusItemIndex();
        itemCount = getPageInfo("itemCount");
        print("itemCount", itemCount);
        print("focusIndex", index);
        if (itemCount &lt; 5) {
     	"null";
        }
        else {
        if (index &gt; 2) {
        "./IMS_Modules/Mediafly/image/arrow_up.fsp";
        }else
        {
       "null";
        }
        }
      </script>
    </image>

    <!-- bottom indicator -->
      <image offsetXPC="15.5" offsetYPC="85.5" widthPC="1.41" heightPC="1.94" redraw="yes" useBackgroundSurface=yes>
      <script>
        index = getFocusItemIndex();
        itemCount = getPageInfo("itemCount");
        if (itemCount &lt; 6) {
       "null";
        }
        else {
        if (index &gt; (itemCount-4))
        {
       	"null";
        }
        else
        {
        "./IMS_Modules/Mediafly/image/arrow_down.fsp";
        }
        }
      </script>
    </image>

    
    

    
    </mediaDisplay>

    <submenu>
    <menu>ALL</menu>
    <onClick>

    	if (searchType!="All")
    	{
    	     slugArray =  showSlugArray +episodeSlugArray;
	     titleArray  = showTitleArray + episodeTitleArray;
	     imageUrlArray  = showImageUrlArray + episodeImageUrlArray;
	     mediaTypeArray  = showMediaTypeArray + episodeMediaTypeArray;
	     imageMediaTypeArray = showImageMediaTypeArray+episodeImageMediaTypeArray;
	     itemSizeReal = Add(showSize, episodeSize);
	     searchType="All";
	     redrawDisplay();
	     
    	
    	}
    	
      null;
    </onClick>
  </submenu>
  
    <submenu>
    <menu>Shows</menu>
    <onClick>
    	if (searchType !="Show")
    	{
    	     slugArray =  showSlugArray;
	     titleArray  = showTitleArray ;
	     imageUrlArray  = showImageUrlArray  ;
	     mediaTypeArray  = showMediaTypeArray  ;
	     imageMediaTypeArray = showImageMediaTypeArray;
	     itemSizeReal = showSize;
	     searchType="Show";
	     redrawDisplay();
    		
    	}
      null;
    </onClick>
  </submenu>
  
    <submenu>
    <menu>Episodes</menu>
    
    <onClick>

    		if (searchType!="Episode")
    	{
    	     slugArray =   episodeSlugArray;
	     titleArray  =  episodeTitleArray;
	     imageUrlArray  =  episodeImageUrlArray;
	     mediaTypeArray  =  episodeMediaTypeArray;
	     imageMediaTypeArray = episodeImageMediaTypeArray;
	     itemSizeReal =  episodeSize;
	     searchType="Episode";
	     redrawDisplay();
    	}
      null;
    </onClick>
  </submenu>

  


    <!-- item_template is the element to substitute item element when the elements under item element does not exist -->
  <item_template>
    <media:thumbnail>
      <script>
        getStringArrayAt(imageUrlArray , -1);
      </script>
    </media:thumbnail>
    <link>
      <script>
        itemLink;
      </script>
    </link>
  </item_template>

  

  <channel>
      <!--remove title-->
  <title></title>
  <link>rss_file://./IMS_Modules/Mediafly/mediafly_search.rss</link> 
  
	<!-- use itemSize element to describe how many items in the page -->
	<itemSize>
		<script>
      			itemSizeReal;
    		</script>
	</itemSize>
  </channel>


</rss>
