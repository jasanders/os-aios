<?xml version="1.0" ?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <onEnter>
      print("onEnter>>>>>>>>>>>-----Mediafly_ContentSource_Channel.rss>>>>>>>>>>>>>>>");

      episodeLink = "rss_file://./IMS_Modules/Mediafly/mediafly_contentsource_episode.rss";
      channelLink = "rss_file://./IMS_Modules/Mediafly/mediafly_contentsource_channel.rss";
      print("episodeLink: " , episodeLink);
      print("channelLink: " , channelLink);
     
  </onEnter>
  <script>

   curChannel = null;
    /* read saved token - tp*/
    fileName= getStoragePath("tmp") + "mediaflyToken.dat";
    tokenArray = readStringFromFile(fileName);
    valtoken = getStringArrayAt(tokenArray, 0);
    tokenId = getStringArrayAt(tokenArray, 1);
    tokenTime = getStringArrayAt(tokenArray, 2);
    print("tokenTime: ",tokenTime);

    keyFilePath = getStoragePath("key") + "__mdfly_key.dat";
    decryptionKeyArray = decFile(keyFilePath);
   
    sharedKey = getStringArrayAt(decryptionKeyArray,0);
    app_id =getStringArrayAt(decryptionKeyArray,1);
  
    print("KeyArray =",decryptionKeyArray);
    print("SharedKey= ", sharedKey);
    print("app_id= ",app_id);

  if(valtoken == null || tokenTime == null || (getSystemTime() - 3300) &gt; tokenTime)
  {
	    if(tokenArray != null)
	    {
	       /* delete all elements - tp */
	       tokenArray = deleteStringArrayAt(tokenArray,0);
	       tokenArray = deleteStringArrayAt(tokenArray,0);
	       tokenArray = deleteStringArrayAt(tokenArray,0);
	    }
	      url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Authentication.GetToken?app_id="+app_id;
	      url = url + "&amp;thirdPartyUserID=" + VtunergetMACaddress();
	      print("url", url);
	      print("3");
	      file = loadXMLFile(url);
	      print("4");

	      if (file == null)
	      {
	        print("failed to load ", url);
	        titleString = "Sign in failed!";
	        redrawDisplay();
	      }
	      else
	      {
		        valtoken  = getXMLText("response","token");
		        tokenId   = getXMLAttribute("response","token","id");
		        print("token = ", valtoken);
		        print("token id = ", tokenId);

		        if ( valtoken != null )
		        {
		          tokenArray = pushBackStringArray(tokenArray, valtoken);
		          tokenArray = pushBackStringArray(tokenArray, tokenId);
		          tokenArray = pushBackStringArray(tokenArray, getSystemTime());

		          storagePathMediaflyToken = getStoragePath("tmp")  + "mediaflyToken.dat";
		          writeStringToFile(storagePathMediaflyToken, tokenArray);
		          print("token", tokenArray);
		          print("write to file ", storagePathMediaflyToken);
		        }
	      }
    }

    current_contentsource_file = getStoragePath("key")+"mdfly_tmpContentSource.dat";
    infoArray = readStringFromFile(current_contentsource_file);
    contentSourceTitle = getStringArrayAt(infoArray,0);
    contentSourceSlug = getStringArrayAt(infoArray,1);
    linkedUserName = getStringArrayAt(infoArray,3);
    contentSourceLogoUrl = "http://csassets.mediafly.com/" +contentSourceSlug+"/appThumb-114x114.png";
    print("contentSourceLogoUrl=",contentSourceLogoUrl);
    
    fileName = getStoragePath("tmp") + "mediaflyChannel.dat";;
    channelSlug = readStringFromFile(fileName);
    print("channelSlug: ",channelSlug);

        filter = getEnv("mdflyfilter");
    
    print("return filter: ",filter);

    if(filter == null)
    	filter = "video,audio";
    print("filter: ", filter);
    

    print(">>>>>>>>>>>>>>>>>>>Ready to getChannel's Information");
  	inclAttrParam = "title,description,imageUrl,channel,published,url,mediaType";
  	idParam = VtunergetMACaddress();
  	
	if (linkedUserName!=null)
	{
		md5_string = MD5(sharedKey,tokenId,channelSlug, inclAttrParam,filter,contentSourceSlug,linkedUserName);
		 url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Channels.GetChannel?app_id="+app_id+"&amp;token=";
		 url = url + valtoken;
		 url = url + "&amp;channelSlug=" + channelSlug;
		 url = url + "&amp;includeAttributes=" + inclAttrParam;
		 url = url + "&amp;mediaType=" + filter;
		 url = url + "&amp;user_context="+ linkedUserName;
		 url = url +"&amp;source="+contentSourceSlug;
		 url = url + "&amp;call_sig=";
		 url = url + md5_string;
	}
	else
	{
		md5_string = MD5(sharedKey,tokenId,channelSlug, inclAttrParam,filter,contentSourceSlug);
		
		 url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Channels.GetChannel?app_id="+app_id+"&amp;token=";
	         url = url + valtoken;
	         url = url + "&amp;channelSlug=" + channelSlug;
	         url = url + "&amp;includeAttributes=" + inclAttrParam;
	         url = url + "&amp;mediaType=" + filter;
	         url = url +"&amp;source="+contentSourceSlug;
	         url = url + "&amp;call_sig=";
	         url = url + md5_string;
	}


    print("md5 string", md5_string);
    itemCnt = 0;

    print("url = ", url);

    file = loadXMLFile(url);
    if (file == null)
    {
    	episodeItemNum = 0;
      	print("Load URL fail ", url);
    }
    else
    {
	      status = getXMLAttribute("response", "status");
	      print("status = ", status);
	      if (status=="ok")
	      {
		      	episodeItemNum = getXMLElementCount("response", "channel", "episode");
		      	channelItemNum = getXMLElementCount("response", "channel", "channel");
	      }
	      else
	      {
		      	episodeItemNum = 0;
		      	channelItemNum = 0;
	      	
	      }
	      
	      print("episodeItemNum = ", episodeItemNum);
	      print("channelItemNum = ", channelItemNum);
    }
    
    if(status == "fail")
    {
	      err =  getXMLAttribute("response", "err", "message");
	      print ("error", err);
    }
    else
    {
    		itemTypeArray = null;
    		
	    if (episodeItemNum &gt; 0)
	    {
		      count=0;
		      episodeItemArray=null;
		      episodeSlugArray=null;
		      imageUrlArray=null;
		      channelArray=null;
		      episodeMediaTypeArray=null;



		      curChannel = getXMLAttribute("response", "channel", "name");
		      
		      while(1)
		      {
			        slug        = getXMLAttribute("response", "channel", "episode", count, "slug");
			        imageUrl = getXMLAttribute("response", "channel", "episode",  count,"imageUrl");
			        episodeTitle = getXMLAttribute("response", "channel", "episode", count, "title");
			        channel      = getXMLAttribute("response", "channel", "episode", count, "channel");

			        episodeUrl   = getXMLAttribute("response", "channel", "episode", count,"url");
			        mediaType = getXMLAttribute("response", "channel", "episode", count,"mediaType");
			        
			        if(slug != null &amp;&amp; slug != "" &amp;&amp; episodeUrl != null)
			        {
			        	  episodeItemArray   =  pushBackStringArray(episodeItemArray,episodeTitle);
				          episodeSlugArray   =  pushBackStringArray(episodeSlugArray, slug);
				          
				          imageUrlArray = pushBackStringArray(imageUrlArray,imageUrl);
				          episodeUrlArray = pushBackStringArray(episodeUrlArray,episodeUrl);
				          
				          channelArray = pushBackStringArray(channelArray,channel);
				          episodeMediaTypeArray = pushBackStringArray(episodeMediaTypeArray,mediaType);
				          
				          itemTypeArray = pushBackStringArray(itemTypeArray,"Episode");
			          
			           	

			        }
			        count += 1;
			        if (count == episodeItemNum)
				    {
				    	break;
				    }
		      }


		
		      
		}

		if (channelItemNum&gt;0)
		{
				
			      count=0;
			      channelItemArray=null;
			      channnelSlugArray=null;
			      channelImageUrlArray=null;

			      
			      while(1)
			      {
				        slug        = getXMLAttribute("response", "channel", "episode", count, "slug");
				        imageUrl = getXMLAttribute("response", "channel", "episode",  count,"imageUrl");
				        channelTitle = getXMLAttribute("response", "channel", "episode", count, "name");
				    
				        
				        if(slug != null &amp;&amp; slug != "" &amp;&amp; episodeUrl != null)
				        {
				        	  channelItemArray   =  pushBackStringArray(episodeItemArray,channelTitle);
					          channnelSlugArray   =  pushBackStringArray(episodeSlugArray, slug);
					          
					          channelImageUrlArray = pushBackStringArray(imageUrlArray,imageUrl);

					          itemTypeArray = pushBackStringArray(itemTypeArray,"Channel");
					   
				        }
				        count += 1;
				        if (count == channelItemNum)
					    {
					    	break;
					    }
			      }


			      titleArray = episodeItemArray;
			      itemCnt = episodeItemNum;

			      redrawDisplay();
			
		}

		titleArray = episodeItemArray + channelItemArray;
		itemCnt = Add(episodeItemNum,channelItemNum);

		print("titleArray =",titleArray);
		print("itemCnt=",itemCnt);
	}

     channel_path = null;
     pathMediafly = getStoragePath("tmp") +  "mediaflypath.dat";
     channel_path = readStringFromFile(pathMediafly);
     print("channel_path=",channel_path);
     
        if(getPageInfo("itemCount") &lt; 1)
      {
	      curChannel = "$[No Episode Found]";
	      datePub = "";
      }
      else
      {
      		curChannel = channel_path + " - " +curChannel;
      }
  </script>

  <onEpisode>
		print("Episode 's ExcuteScript>>>>>>>>>>>>>>"); 
	        episodeSlug = getStringArrayAt(episodeSlugArray, itemIndex);
	        storagePathMediaflyEpisode = getStoragePath("tmp");
	        storagePathMediaflyEpisode = storagePathMediaflyEpisode + "mediaflyEpisode.dat";
	        writeStringToFile(storagePathMediaflyEpisode, episodeSlug);
	        print("The Next Episode Slug is ",episodeSlug);

 		
 </onEpisode>

 <onChannel>
 		print("Channel 's ExcuteScript>>>>>>>>>>>>>>"); 
	        channelSlug = getStringArrayAt(episodeSlugArray+channnelSlugArray, itemIndex);

	         storagePathMediaflyChannel = getStoragePath("tmp");
            	storagePathMediaflyChannel = storagePathMediaflyChannel + "mediaflyChannel.dat";
            	writeStringToFile(storagePathMediaflyChannel, channelSlug);

             	pathMediafly = getStoragePath("tmp") +  "mediaflypath.dat";
             	writeStringToFile(pathMediafly,"");
	      
	        print("The Channel Slug is ",channelSlug);
 	
 </onChannel>
  
  <mediaDisplay name="threePartsView" selectMenuOnRight="no"
    		showDefaultInfo="no"
		autoSelectMenu=no
		autoSelectItem=no
		forceFocusOnItem=yes
    
		
	        itemPerPage="5"
	     
       	        imageFocus=" "
	        imageParentFocus ="null"
	        parentFocusFontColor="255:255:0"
  

		sideLeftWidthPC= 0
		sideRightWidthPC= 100
		sideTopHeightPC= 0
		sideBottomHeightPC= 0
		
		backgroundColor=-1:-1:-1
		sideColorLeft=28:35:51 
		sideColorRight=28:35:51
		
		headerImageXPC = 11.1
		headerImageYPC = 8
		headerImageWidthPC = 11
		headerImageHightPC = 10
		headerCapWidthPC = 0
		headerWidthPC = 0

		menuXPC = 8
		menuYPC = 15
		menuWidthPC = 18
		menuHeightPC = 6
		menuPerPage = 10
		
		itemImageXPC = 18.3
		itemImageYPC = 32
		itemImageCapYPC = 3.5
		itemImageWidthPC = 5.58
		itemImageHeightPC = 9.9
		
		itemXPC = 26.7
		itemYPC = 31.5
		itemWidthPC = 58.5
		itemHeightPC =10.8
               showHeader = "no"
		itemBackgroundColor="-1:-1:-1"
		itemGap = "1.8"

		
		popupXPC=8
		popupYPC=15
		popupWidthPC=22.3
		popupHeightPC=5.5
		popupFontSize=13
		popupBorderColor=28:35:51 
		popupForegroundColor=255:255:255
		popupBackgroundColor=28:35:51 

	       idleImageXPC=83.12
	       idleImageYPC=89.58
	       idleImageWidthPC=3.1
	       idleImageHeightPC=5.5

    >

    <idleImage> image/POPUP_LOADING_01.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_02.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_03.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_04.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_05.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_06.fsp </idleImage>

  	<backgroundDisplay  name=mediafly_channel_episodes_background>
		<image offsetXPC=0  offsetYPC= 0 widthPC=100 heightPC=100>
			<script>
				"./IMS_Modules/Mediafly/image/mediafly_bg_02-01.fsp";
			</script>
		</image>
	</backgroundDisplay>

		<!--ContentSource Logo-->
    <image offsetXPC=6.8  offsetYPC= 2.64 widthPC=26.56 heightPC=15.69 redraw="no">
      <script>
   		contentSourceLogoUrl;
      </script>
    </image>

    <onUserInput>
      <script>
        userInput = currentUserInput();
        ret = false;        
        if (userInput == "enter")
        {
          EntryTimes = EntryTimes + 1;
          focusIndex = getFocusItemIndex();
          print(" ************* EntryTimes = ", EntryTimes, "focusIndex:", focusIndex);
          print("focusIndex: ", focusIndex);
          episodeSlug = getStringArrayAt(slugArray, focusIndex);
          storagePathMediaflyEpisode = getStoragePath("tmp");
          storagePathMediaflyEpisode = storagePathMediaflyEpisode + "mediaflyEpisode.dat";
          writeStringToFile(storagePathMediaflyEpisode, episodeSlug);
          print("selected episode slug: ", episodeSlug);

         storagePathMediaflyShowOrChannel = getStoragePath("tmp");
	 storagePathMediaflyShowOrChannel = storagePathMediaflyShowOrChannel +"mediaflyInWhich.dat";
	 writeStringToFile(storagePathMediaflyShowOrChannel, "Channel");
        } 
        else if (userInput == "video_play") 
        {
          focusIndex = getFocusItemIndex();
          if(getStringArrayAt(mediaTypeArray, focusIndex) == "Video")
          {
             playUrl = getStringArrayAt(episodeUrlArray, focusIndex);
             playItemURL(playUrl,0);
             ret = "true";
          }
          else
          {
             /* go to next page and play audio */
             fileName = getStoragePath("tmp") + "mediaflyPlayUrl.dat";
             playUrl = getStringArrayAt(episodeUrlArray, focusIndex);
             writeStringToFile(fileName, playUrl);
             print("playUrl: ",playUrl );
             showIdle();
             postMessage("enter"); 
           }
         }
        ret;
      </script>
    </onUserInput>



      <!-- background color of short story section -->
    <!-- display additional for current focus show on the bottom row -->
    <!-- the short story -->
  <text offsetXPC="18.2" offsetYPC="20" widthPC="80" heightPC="5"  fontSize="18" foregroundColor="255:255:255"
    backgroundColor="-1:-1:-1" align="left"
   >
      <script>
        curChannel;
      </script>
    </text>

<!--
    <text offsetXPC= "7.8"  offsetYPC= "72" widthPC="73" heightPC="2.5"  fontSize="10"
    foregroundColor="38:22:93"
    redraw=yes useBackgroundSurface=yes>
      <script>
        datePub;
      </script>
    </text>
-->
<!--

    <text offsetXPC= "7.8"  offsetYPC= "74.5" widthPC="73" heightPC="11.3"  fontSize="10" lines="4"
    foregroundColor="38:22:93"
    redraw=yes useBackgroundSurface=yes>
      <script>
        getStringArrayAt(descriptionArray, curIndex );
      </script>
    </text>
    
-->

    <!-- image of the story -->
    <!--
    <image offsetXPC= "85"  offsetYPC= "73" widthPC="8" heightPC="12" redraw="yes" >
      <script>
        curIndex = getFocusItemIndex();
        if(curIndex &lt; 0)
        {curIndex = 0;}
        getStringArrayAt(imageUrlArray , curIndex );
      </script>
    </image>
    -->

      <!-- top indicator -->
    <image offsetXPC="20.5" offsetYPC="29" widthPC="1.41" heightPC="1.94" redraw="yes" useBackgroundSurface=yes>
      <script>
        index = getFocusItemIndex();
        itemCount = getPageInfo("itemCount");
        print("itemCount", itemCount);
        print("focusIndex", index);
        if (itemCount &lt; 6) {
     	"null";
        }
        else {
        if (index &gt; 2) {
        "./IMS_Modules/Mediafly/image/arrow_up.fsp";
        }else
        {
       "null";
        }
        }
      </script>
    </image>

    <image offsetXPC="20.5" offsetYPC="86.2" widthPC="1.41" heightPC="1.94" redraw="yes" useBackgroundSurface=yes>
      <script>
        index = getFocusItemIndex();
        itemCount = getPageInfo("itemCount");
        if (itemCount &lt; 6) {
       null;
        }
        else {
        if (index &gt; (itemCount-4))
        {
       		null;
        }
        else
        {
       		 "./IMS_Modules/Mediafly/image/arrow_down.fsp";
        }
        }
      </script>
    </image>
    
    <itemDisplay>
		<image offsetXPC=0 offsetYPC=0 widthPC=100 heightPC=100>
			<script>
			index1 = getQueryItemIndex();
			index2 =getFocusItemIndex ();
			if (index1 == index2)
			{
				if (getDrawingItemState() == "focus")
				{
					"./IMS_Modules/Mediafly/image/mediafly_channelepisodes_focus.fsp";
				}
				else
				{
					"./IMS_Modules/Mediafly/image/mediafly_channelepisodes_unfocus.fsp";
				}
			}
			else
			{
				"./IMS_Modules/Mediafly/image/mediafly_channelepisodes_unfocus.fsp";
			}
			
			</script>
		</image>
		
		<text offsetXPC= 8 offsetYPC=10 widthPC=86 heightPC=80 backgroundColor=-1:-1:-1  fontSize=16 >
			<foregroundColor>
				<script>
					fgcolor = "102:102:102";
					queryIndex = getQueryItemIndex();
					focusIndex = getFocusItemIndex();
					if (queryIndex == focusIndex) {
						fgcolor = "0:148:13";
					}
					fgcolor;
				</script>
			</foregroundColor>
			
			<script>
				index = getQueryItemIndex();
				str =  getStringArrayAt(titleArray , index);
				str;
			</script>
		</text>
			
	</itemDisplay>
    


  
   </mediaDisplay>

  <item_template>

      <onClick>
      <script>
      	itemIndex = getFocusItemIndex();
      	print("ItemIndex=",itemIndex);
        print("execute", onClickItemScript);
        itemType = getStringArrayAt(itemTypeArray,itemIndex);
        if (itemType=="Episode")
        {
        	executeScript("onEpisode");
        	link = episodeLink;
        }
        else if (itemType=="Channel")
        	{
        		executeScript("onChannel");
        		link = channelLink;
        	}
    	
    	
    	null;
      </script>
    </onClick>
    
    
    <media:thumbnail>
      <script>
        getStringArrayAt(imageUrlArray , -1);
      </script>
    </media:thumbnail>
      <link>
        <script>
     		link;
        </script>
    </link>
  </item_template>
  <channel>
       <title></title>
      <itemSize>
      <script>
        itemCnt;
      </script>
        null;
    </itemSize>
 
  </channel>

  </rss>


