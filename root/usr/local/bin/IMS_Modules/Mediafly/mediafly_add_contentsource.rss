<?xml version='1.0' ?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">

<bookmark> Mediafly Add Content Source </bookmark>

  <!-- the global onEnter element will be executed when enter or re-enter the page -->
<onEnter>
  showIdle();

</onEnter>

<onDestroyToken>
		 fileName= getStoragePath("tmp") + "mediaflyToken.dat";
		 writeStringToFile(fileName,NULL);
		 print("Destroy Token>>>>>>>>>>>>");

				 
</onDestroyToken>
<!-- the global script element will be executed only once when the page start -->
<script>
	 print("Jump To Link RSS>>>>>>>mediafly_add_contentsource.rss");


	 
	 menuSize = 0;
	 menuIndex = 0;
	 menuArray = null;

	 contentSourceTitle = null;
	 contentSourceMethod = null;
	 contentSourceSlug = null;
	 contentSourceAllowUnboundUser = null;
	 contentSourceSearchable = null;
	 contentSourceImageUrl = null;
	 
	 contentSourceNum = 0;
	 contentSourceTitleArray=null;
	 contentSourceMethodArray = null;
	 contentSourceSlugArray = null;
	 contentSourceAllowUnboundUserArray = null;
	 contentSourceSearchableArray = null;
	contentSourceImageUrlArray = null;

	 itemDisplayArray = null;
	 itemScriptArray = null;
	 currentLinkedUser = null;

	 linkedUserArray =  null;

	 linkedUserNum = 0;
	 itemSize = 0;

	pinCode = null;

	 action_status = "failure";

	  valtoken = null;
	  tokenId = null;


	  keyFilePath = getStoragePath("key") + "__mdfly_key.dat";
	  decryptionKeyArray = decFile(keyFilePath);
	   
	    sharedKey = getStringArrayAt(decryptionKeyArray,0);
	    app_id =getStringArrayAt(decryptionKeyArray,1);
	  
	    print("KeyArray =",decryptionKeyArray);
	    print("SharedKey= ", sharedKey);
	    print("app_id= ",app_id);


	
	  fileName= getStoragePath("tmp") + "mediaflyToken.dat";
	  tokenArray = readStringFromFile(fileName);
	  valtoken = getStringArrayAt(tokenArray, 0);
	  tokenId = getStringArrayAt(tokenArray, 1);
	  tokenTime = getStringArrayAt(tokenArray, 2);
	  print("tokenTime: ",tokenTime);

	  if(valtoken == null || tokenTime == null || (getSystemTime() - 3300) &gt; tokenTime)
	  {
	 	    print("Re Get Token!");
	 	
		    if(tokenArray != null)
		    {
		       /* delete all elements - tp */
		       tokenArray = deleteStringArrayAt(tokenArray,0);
		       tokenArray = deleteStringArrayAt(tokenArray,0);
		       tokenArray = deleteStringArrayAt(tokenArray,0);
		    }
		    url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Authentication.GetToken?app_id="+app_id+"";
		    url = url + "&amp;thirdPartyUserID=" + VtunergetMACaddress(); 
		    print("url", url);
		    file = loadXMLFile(url);

		    if (file == null)
		    {
		      print("failed to load ", url);
		      titleString = "Sign in failed!";
		      redrawDisplay();
		    }
		    else
		    {
		      valtoken  = getXMLText("response","token");
		      tokenId   = getXMLAttribute("response","token","id");
		      print("token = ", valtoken);
		      print("token id = ", tokenId);
		     }
		    if ( valtoken != null )
		    {
		      storagePathMediaflyToken = getStoragePath("tmp") + "mediaflyToken.dat";
		      tokenArray = pushBackStringArray(tokenArray, valtoken);
		      tokenArray = pushBackStringArray(tokenArray, tokenId);
		      tokenArray = pushBackStringArray(tokenArray, getSystemTime());
		      writeStringToFile(storagePathMediaflyToken, tokenArray);
		      print("token: ", tokenArray);
		      print("write to file ", storagePathMediaflyToken);
		    }
	  }


	  md5_string = MD5(sharedKey, tokenId);
	  print("md5_string",md5_string);
	  urlContentSource = "http://api.mediafly.com/api/rest/2.0/Mediafly.ContentSources.GetContentSources?app_id="+app_id+"&amp;token=";
	  urlContentSource = urlContentSource + valtoken;
	  urlContentSource = urlContentSource + "&amp;call_sig=" + md5_string;
	  
	  print("urlContentSource:",urlContentSource);
	  
	  file = loadXMLFile(urlContentSource);
	  
	  if (file == null)
	  {
	    contentSourcesNum= 0;
	    print("Load URL fail ", urlContentSource);
	  }
	  else
	  {
		    status = getXMLAttribute("response", "status");
		    print("status: ", status);
		    if(status == "fail")
		    {
		      err =  getXMLAttribute("response", "err", "message");
		      print ("error", err);
		      itemSize = 0;
		    }
		    else 
		      contentSourceNum = getXMLElementCount("response", "contentSources","contentSource");
	    	      print("contentSourcesNum = ", contentSourceNum);
	  }
 
	  if (contentSourceNum &gt; 0)
	  {
	   
		    count=0;

		    while(1)
		    {
			      contentSourceTitle  = getXMLAttribute("response", "contentSources","contentSource",count, "title");
			      contentSourceMethod      = getXMLAttribute("response", "contentSources","contentSource",count,"bindingMethods","bindingMethod","type");
			      contentSourceAllowUnboundUser = getXMLAttribute("response", "contentSources","contentSource",count, "allowsUnboundUsers");
			      contentSourceSlug = getXMLAttribute("response", "contentSources","contentSource",count, "slug");
			      contentSourceSearchable = getXMLAttribute("response", "contentSources","contentSource",count, "isSearchable");
			      contentSourceImageUrl =  getXMLAttribute("response", "contentSources","contentSource",count, "imageUrl");

			      
			      contentSourceTitleArray    = pushBackStringArray(contentSourceTitleArray, contentSourceTitle);
			      contentSourceMethodArray    = pushBackStringArray(contentSourceMethodArray, contentSourceMethod);
			      contentSourceAllowUnboundUserArray    = pushBackStringArray(contentSourceAllowUnboundUserArray, contentSourceAllowUnboundUser);
			      contentSourceSlugArray    = pushBackStringArray(contentSourceSlugArray, contentSourceSlug);
			      contentSourceSearchableArray = pushBackStringArray(contentSourceSearchableArray,contentSourceSearchable);
			      contentSourceImageUrlArray = pushBackStringArray(contentSourceImageUrlArray,contentSourceImageUrl);
			      
			      menuArray = pushBackStringArray(menuArray,contentSourceTitle);
			      count  = count + 1;
			      menuSize   = menuSize +1;
			      
			      if (count == contentSourceNum)
			      {
			          break;
			      }
		      
		    } 
	    
	  } 
	  
	  print("contentsource:  ",contentSourceTitleArray);
	  print("contentsourceMethod:  ",contentSourceMethodArray);
	  print("contentsourceAllowUnbound User: ",contentSourceAllowUnboundUserArray);
	  print("contentSourceSlugArray:  ",contentSourceSlugArray);
	  print("contentSourceSearchable",contentSourceSearchableArray);
	  print("contentSourceImageUrlArray",contentSourceImageUrlArray);
  
	  menuSize = menuSize +1;
	  menuArray  = pushBackStringArray(menuArray, "$[Add New Content]");
	  
	  if(contentSourceNum &gt; 0)
	  {

		  executeScript("onSynchronizeContentSource");
	 
		    executeScript("onUpdateItem");
		    setFocusItemIndex(0);
		   
	   }
	   else
	   {
	   	   print(">>>>>>>>>>>>>>>>>>Num=0>>>>>>>>>>>>");
	   	   fileName= getStoragePath("key") + "mdfly_ContentSource.dat";
		   deleteFile(fileName);
		   setFocusItemIndex(0);
		   setFocusMenuIndex(0);
                   postMessage("left");
	   	
	   }
	   

	  
</script>

<onRefresh>
	print("Refresh Time>>>>>>>>>>");
	menuIndex = getFocusMenuIndex();
	print("menuIndex=",menuIndex);
	executeScript("onUpdateItem");
	setRefreshTime(-1);
</onRefresh>



<!--Need input : contentSourceTitleArray(which is the newest)-->
<onSaveContentSource>
	contentSource_file = getStoragePath("key") + "mdfly_ContentSource.dat";
	 writeStringToFile(contentSource_file,contentSourceTitleArray);
	 print("write to mdfly_ContentSource.dat");

</onSaveContentSource>


<onSynchronizeContentSource>
	
	fileName= getStoragePath("key") + "mdfly_ContentSource.dat";
	storageContentSourceTitleArray = readStringFromFile(fileName);
	if (storageContentSourceTitleArray!=null)
	{
		
		tmpFile = getStoragePath("key") + "mdfly_tmp.dat";
		i = 0;
		
		while (i&lt;contentSourceNum)
		{
			contentSourceTitle = getStringArrayAt(contentSourceTitleArray,i);
			storageContentSourceTitle = getStringArrayAt(storageContentSourceTitleArray,i);
			if (contentSourceTitle==storageContentSourceTitle)
			{
				print("i= ",i);
				print("contentSourceTitle=",contentSourceTitle);
				print("storageContentSourceTitle=",storageContentSourceTitle);
				i = i +1;
			}
			else
			{
				j = i+1;
				print("j = ",j);
				while (j&lt;contentSourceNum)
				{
					storageContentSourceTitle = getStringArrayAt(storageContentSourceTitleArray,j);
					print("storageContentSourceTitle=",storageContentSourceTitle);
					if (contentSourceTitle==storageContentSourceTitle)
					{
						print("Get Equal>>>>>>>>>>>");
						fromFile = getStoragePath("key") + "mdfly_"+j+".dat";
						toFile = getStoragePath("key") + "mdfly_"+i+".dat";
						copyFile(fromFile,tmpFile);
						copyFile(toFile,fromFile);
						copyFile(tmpFile,toFile);
						
						tmpTitleArray = storageContentSourceTitleArray;
						k = contentSourceNum-1;
						while (k!=j)
						{
							storageContentSourceTitleArray = deleteStringArrayAt(storageContentSourceTitleArray,k);
							k =Minus(k,1);
							print("k = ",k);
						}
						storageContentSourceTitleArray = deleteStringArrayAt(storageContentSourceTitleArray,k);
						storageContentSourceTitleArray = pushBackStringArray(storageContentSourceTitleArray,getStringArrayAt(tmpTitleArray,i));
						k = Add(k,1);
						while (k!=contentSourceNum)
						{
							
							storageContentSourceTitleArray = pushBackStringArray(storageContentSourceTitleArray,getStringArrayAt(tmpTitleArray,k));
							k = Add(k,1);
							print("k>>",k);
						}
						break;
					}

					j = j +1;
				}
				i = i +1;	
				deleteFile(tmpFile);
			}

		
		}
	}

	{

		    fileName= getStoragePath("key") + "mdfly_ContentSource.dat";
		    writeStringToFile(fileName,""); 
		    writeStringToFile(fileName,contentSourceTitleArray);
		    print("write to mdfly_ContentSource.dat");
		
	}
	
		
</onSynchronizeContentSource>

<onSaveContentSourceInfo>
	print("onSave Info>>>>>>>>>>>>>>");
	contentSource_info_file = getStoragePath("key") + "mdfly_"+menuIndex+".dat";
	print("contentSource_info_file: ",contentSource_info_file);
	infoArray = null;
	infoArray = pushBackStringArray(infoArray,contentSourceSlug);
	

	infoArray = pushBackStringArray(infoArray,contentSourceAllowUnboundUser);
	
	infoArray = pushBackStringArray(infoArray,contentSourceMethod);

	infoArray = pushBackStringArray(infoArray,contentSourceSearchable);

	infoArray = pushBackStringArray(infoArray,contentSourceImageUrl);
	
	if (currentLinkedUser!=null)
	{
		infoArray = pushBackStringArray(infoArray,currentLinkedUser);
	}
	else
	{
		print("There is no Linked User >>>>>>>>>>>");
	}
	
	 writeStringToFile(contentSource_info_file,infoArray);
	
</onSaveContentSourceInfo>

  
<mediaDisplay name="threePartsView"
		showDefaultInfo="no"
		autoSelectMenu="no"
		autoSelectItem="no"
		
		forceFocusOnItem="yes"
		selectMenuOnRight="no"
		
		itemPerPage = "5"    
		imageFocus=" "
   		imageParentFocus ="null"
   		parentFocusFontColor="255:255:0"

		backgroundColor="-1:-1:-1"
		sideColorLeft="-1:-1:-1"
		sideColorRight="-1:-1:-1"
		
		headerImageXPC = "11.1"
		headerImageYPC = "8"
		headerImageWidthPC = "11"
		headerImageHightPC = "10"
		
		headerCapWidthPC = "0"
		headerWidthPC = "0"

     menuXPC = "0"
     menuYPC = "29"
     menuWidthPC = "31.72"
     menuHeightPC = "10.56"
     menuPerPage = "5"

    menuImageXPC = "0"
    menuImageYPC = "29"
    menuImageWidthPC ="0"
    menuImageHeightPC="0"

		

   		fontSize="13"
		
     itemImageXPC = "35"
     itemImageYPC = "27"
     itemImageCapYPC = "1"
     itemImageWidthPC = "0"
     itemImageHeightPC = "0"
                
     itemXPC = "35"
     itemYPC = "28"
     itemWidthPC = "53.67"
     itemHeightPC = "11"
		
		itemBackgroundColor="-1:-1:-1"
		
		popupXPC="8"
		popupYPC="15"
		popupWidthPC="22.3"
		popupHeightPC="5.5"
		popupFontSize="13"
		popupBorderColor="28:35:51"
		popupForegroundColor="255:255:255"
		popupBackgroundColor="28:35:51"


        	idleImageXPC="83.12"
        	idleImageYPC="89.58"
        	idleImageWidthPC="3.1"
       		idleImageHeightPC="5.5"
		
		showHeader="no"
    >
		
		<idleImage> image/POPUP_LOADING_01.fsp </idleImage>
		<idleImage> image/POPUP_LOADING_02.fsp </idleImage>
		<idleImage> image/POPUP_LOADING_03.fsp </idleImage>
		<idleImage> image/POPUP_LOADING_04.fsp </idleImage>
		<idleImage> image/POPUP_LOADING_05.fsp </idleImage>
		<idleImage> image/POPUP_LOADING_06.fsp </idleImage>

		
	<backgroundDisplay  name=mediafly_adduser_background>
			<image offsetXPC=0  offsetYPC= 0 widthPC=100 heightPC=100>
				<script>
					"./IMS_Modules/Mediafly/image/mediafly_bg_01-01.fsp";
				</script>
			</image>
	</backgroundDisplay>

		<image offsetXPC=6.8  offsetYPC= 2.64 widthPC=26.56 heightPC=15.69 redraw="no">
			<script>
				"./IMS_Modules/Mediafly/image/mediafly-logo-and-text-med.fsp";
			</script>
		</image>

		<image offsetXPC=31.7  offsetYPC= 26.11 widthPC=3.52 heightPC=74.03 redraw="no">
			<script>
				"./IMS_Modules/Mediafly/image/mediafly_bg_line01.fsp";
			</script>
		</image>
		
  <text offsetXPC=37 offsetYPC=65 widthPC=50  heightPC=15 backgroundColor=-1:-1:-1  fontSize=17 redraw = yes foregroundColor=102:102:102 >
	<script>
		str ="";
		if (linkedUserNum&gt;0)
		{
			str = "Current User:";
		}
		str;
	</script>
  </text>
   <text offsetXPC=37 offsetYPC=70 widthPC=50  heightPC=15 backgroundColor=-1:-1:-1  fontSize=17 redraw = yes foregroundColor=102:102:102>
	<script>
		str ="";
		if (linkedUserNum&gt;0)
		{
			str = currentLinkedUser;
		}
		str;
	</script>
  </text>

  <text offsetXPC="7.9" offsetYPC="20" widthPC="40" heightPC="5"  fontSize="18" foregroundColor="255:255:255"
    backgroundColor="-1:-1:-1" align="left"
   >
      <script>
      	"Content Management";
      </script>
    </text>

	<menuDisplay>
			<image offsetXPC=0 offsetYPC=0 widthPC=100 heightPC=100 useBackgroundSurface=yes>
			<script>
			index1 = getQueryMenuIndex();
			index2 = getFocusMenuIndex();
			if (index1 == index2)
			{
				
				if (getDrawingItemState() == "inactive")
				{
					"./IMS_Modules/Mediafly/image/mediafly_menu_focus.fsp";
				}
				else
				{
					"./IMS_Modules/Mediafly/image/mediafly_menu_inactive.fsp";
				}
			}
			else
			{
				null;
			}
			</script>
			</image>
		<text offsetXPC=25 offsetYPC=10 widthPC=75  heightPC=80 backgroundColor=-1:-1:-1  fontSize=17 >
			<foregroundColor>
				<script>
					fgcolor = "102:102:102";
					queryIndex = getQueryMenuIndex();
					focusIndex = getFocusMenuIndex();
					if (queryIndex == focusIndex) {
						fgcolor = "0:148:13";
					}
					fgcolor;
				</script>
			</foregroundColor>
			
			<script>
				index = getQueryMenuIndex();
				str = getStringArrayAt(menuArray,index);
				str;
			</script>
			</text>
	</menuDisplay>
 
  <onUserInput>
    <script>
      userInput = currentUserInput();
      itemFocusState = getDrawingItemState();
      print("input key: ", userInput);
      print("itemFocusState:",itemFocusState);
      ret = "false";

      if (itemFocusState=="inactive"&amp;&amp;(userInput=="down"||userInput=="up"))
      {
      		itemDisplayArray = null;
      		itemSize = 0;
      		redrawDisplay();
      		ret = "false";
      }
      
      if(userInput == "right" &amp;&amp; itemFocusState == "focus")
      {
        ret = "true"; /* do nothing tsp */
      }
      /*end if(userInput == "right" */
      if(userInput == "enter")
      {
        print("currentFocusMenuItem: ", currentFocusMenuItem);;
        print("(onUserInput)currentFocusMenuItem: ",currentFocusMenuItem, "userInput: ",userInput);        
        if(currentFocusMenuItem == setDefaultUserMenuLoc || currentFocusMenuItem == deleteUserMenuLoc)
        {
          ret = "true";
          SelectMenu(currentFocusMenuItem);
        }
      }
    
      ret;
    </script>
  </onUserInput>

  <script>
    currentFocusMenuItem = getFocusMenuIndex();
    print("(script)currentFocusMenuItem: ",currentFocusMenuItem, "userInput: ",userInput);
    /* move cursor to menu item tsp */
    if(firstEntry == 1 &amp;&amp; getDrawingItemState() == "focus")
    {
      print("(script)focus item : ",getDrawingItemState());
      firstEntry = 0;
     
    }
  </script>

  

<itemDisplay>
		<image offsetXPC=0 offsetYPC=0 widthPC=100 heightPC=100>
			<script>
			index1 = getQueryItemIndex();
			index2 =getFocusItemIndex ();
			if (index1 == index2)
			{
				if (getDrawingItemState() == "focus")
				{
					"./IMS_Modules/Mediafly/image/mediafly_menuitem_focus.fsp";
				}
				else
				{
					"./IMS_Modules/Mediafly/image/mediafly_menuitem_unfocus.fsp";
				}
			}
			else
			{
				"./IMS_Modules/Mediafly/image/mediafly_menuitem_unfocus.fsp";
			}
			
			</script>
		</image>
		
		<text offsetXPC= 5 offsetYPC=10 widthPC=90 heightPC=80 backgroundColor=-1:-1:-1  fontSize=17 >
			<foregroundColor>
				<script>
					fgcolor = "102:102:102";
					queryIndex = getQueryItemIndex();
					focusIndex = getFocusItemIndex();
					if (queryIndex == focusIndex) {
						fgcolor = "0:148:13";
					}
					fgcolor;
				</script>
			</foregroundColor>
			
			<script>
				index = getQueryItemIndex();
				
				str =  getStringArrayAt(itemDisplayArray , index);
				str;
			</script>
		</text>

</itemDisplay>



</mediaDisplay>

<!--need input :mcode-->
<onAddContentSource>
	  md5_string = MD5(sharedKey,tokenId, mcode);
          print("md5 string", md5_string);
          url = "http://api.mediafly.com/api/rest/2.0/Mediafly.ContentSources.AddContentSource?app_id="+app_id+"&amp;token=";
          url = url + valtoken;
          url = url +"&amp;code=";
          url = url + mcode;
          url = url + "&amp;call_sig=";
          url = url + md5_string;
          
          print("url=",url);
          file = loadXMLFile(url);
       
          
          if (file == null) 
          {
	          
	           print("Load URL fail ", url);
          }
          else 
          {
		  status = getXMLAttribute("response", "status");
		     if (status=="fail")
	          {
	          	errMessage = getXMLAttribute("response","err","message");
	          	print("err:",errMessage);
	          	action_status = "failure";
	          }
		else
		{
			requiresAuthentication = getXMLAttribute("response","contentSource","requiresAuthentication");
			requireUserName =  getXMLAttribute("response","contentSource","usernameRequired");
			requirePassword =  getXMLAttribute("response","contentSource","passwordRequired");
			print("RequireAuthentication: ",requiresAuthentication);
			print("RequireUserName: ",requireUserName);
			print("RequirePassword: ",requirePassword);
			
			contentSourceMethod = getXMLAttribute("response","contentSource","bindingMethods","bindingMethod","type");
			print("bindingMethod = ",contentSourceMethod);
			
			contentSourceAllowUnboundUser = getXMLAttribute("response","contentSource","allowsUnboundUsers");

			contentSourceTitle = getXMLAttribute("response","contentSource","title");
			print("Title= ",contentSourceTitle);

			contentSourceSlug = getXMLAttribute("response","contentSource","slug");
			print("slug=",contentSourceSlug);

			contentSourceImageUrl =  getXMLAttribute("response","contentSource", "imageUrl");				
			print("image=",contentSourceImageUrl);	

			
			contentSourceSearchable = getXMLAttribute("response","contentSource", "isSearchable");		
			print("isSearchable:",contentSourceSearchable);

			 action_status = "success";


		}
		  
          }
       
	null;
</onAddContentSource>

<!--need input :contentSourceSlug-->
<onContentSourcesDeviceAuthenticate>
	if (requiresAuthentication=="true"&amp;&amp;(requireUserName="true"||requirePassword=="true"))
	{
		csAuthenticate_rss = "rss_file://./IMS_Modules/Mediafly/mediafly_CsAuthenticate.rss";
		infoArray = doModalRss(csAuthenticate_rss);
		if (infoArray!=null)
		{
			userName = getStringArrayAt(infoArray,0);
			passWord = getStringArrayAt(infoArray,1);
			
			url = "http://api.mediafly.com/api/rest/2.0/Mediafly.ContentSources.AuthenticateDeviceForSource?app_id="+app_id+"&amp;token=";
		        url = url + valtoken;
		        url=  url +"&amp;source=";
		        url=  url + contentSourceSlug;
		        
			if (requireUserName=="true")
			{
				url = url +"&amp;username=";
				url = url +userName;
				
				if (requirePassword=="true")
				{
					md5_string = MD5(sharedKey,tokenId,contentSourceSlug, userName,passWord);
					url = url +"&amp;password=";
					url = url + passWord;
				}
				else
				{
					md5_string = MD5(sharedKey,tokenId,contentSourceSlug, userName);
				}
			}
			else
			{
				if (requirePassword=="true")
				{
					md5_string = MD5(sharedKey,tokenId,contentSourceSlug,passWord);
					url = url +"&amp;password=";
					url = url + passWord;
				}
			}
			
		          print("md5 string", md5_string);
		         
		          url = url + "&amp;call_sig=";
		          url = url + md5_string;

		          print("url=",url);
		          file = loadXMLFile(url);
		       
		          if (file == null) 
		          {
			          
			           print("Load URL fail ", url);
		          }
		          else 
		          {
				  status = getXMLAttribute("response", "status");
				    if (status=="fail")
			          {
			          	errMessage = getXMLAttribute("response","err","message");
			          	print("err:",errMessage);
			          	failed_css = "rss_file://./IMS_Modules/Mediafly/mediafly_FailedAuthenticate.rss";
			          	doModalRss(failed_css);
			          	
			          }
			          action_status = "success";
		          }
			
			
		}
	}
	null;
</onContentSourcesDeviceAuthenticate>



<onUpdateMenu>
	 contentSourceTitleArray    = pushBackStringArray(contentSourceTitleArray, contentSourceTitle);
      	 contentSourceMethodArray    = pushBackStringArray(contentSourceMethodArray, contentSourceMethod);
      	 contentSourceAllowUnboundUserArray    = pushBackStringArray(contentSourceAllowUnboundUserArray, contentSourceAllowUnboundUser);
      	 contentSourceSlugArray    = pushBackStringArray(contentSourceSlugArray, contentSourceSlug);
      	 contentSourceSearchableArray = pushBackStringArray(contentSourceSearchableArray, contentSourceSearchable);
      	 contentSourceImageUrlArray = pushBackStringArray(contentSourceImageUrlArray, contentSourceImageUrl);

	menuArray = deleteStringArrayAt(menuArray,menuSize-1);
	menuArray = pushBackStringArray(menuArray,contentSourceTitle);
	
	menuSize = menuSize +1;
  	menuArray  = pushBackStringArray(menuArray, "$[Add New Content]");

	print("contentsource:  ",contentSourceTitleArray);
  	print("contentsourceMethod:  ",contentSourceMethodArray);
  	print("contentsourceAllowUnbound User: ",contentSourceAllowUnboundUserArray);
 	print("contentSourceSlugArray:  ",contentSourceSlugArray);
  	print("Menu Array : " ,menuArray);

	executeScript("onSaveContentSource");
	
	redrawDisplay();
	
      	 
</onUpdateMenu>

<onDeleteMenu>
	menuArray = deleteStringArrayAt(menuArray,menuIndex);
	menuSize = menuSize -1;
	
	contentSourceTitleArray = deleteStringArrayAt(contentSourceTitleArray,menuIndex);
	contentSourceMethodArray = deleteStringArrayAt(contentSourceMethodArray,menuIndex);
	contentSourceAllowUnboundUserArray = deleteStringArrayAt(contentSourceAllowUnboundUserArray,menuIndex);
	contentSourceSlugArray = deleteStringArrayAt(contentSourceSlugArray,menuIndex);
	 contentSourceSearchableArray = deleteStringArrayAt(contentSourceSearchableArray, menuIndex);
      	 contentSourceImageUrlArray = deleteStringArrayAt(contentSourceImageUrlArray, menuIndex);

	print("contentsource:  ",contentSourceTitleArray);
  	print("contentsourceMethod:  ",contentSourceMethodArray);
  	print("contentsourceAllowUnbound User: ",contentSourceAllowUnboundUserArray);
 	print("contentSourceSlugArray:  ",contentSourceSlugArray);
 	print("contentSourceSearchableArray:",contentSourceSearchableArray);
 	print("contentSourceImageUrlArray:",contentSourceImageUrlArray);
  	print("Menu Array : " ,menuArray);

	executeScript("onSaveContentSource");
	
  	itemDisplayArray = null;
	itemScriptArray = null;
	currentLinkedUser = null;
	linkedUserArray =  null;

	linkedUserNum = 0;
	itemSize = 0;
	if (menuSize&lt;2)
		postMessage("left");
	null;
</onDeleteMenu>

<onUpdateItem>

	itemDisplayArray = null;
	itemScriptArray = null;
	itemSize = 0;
	currentLinkedUser = null;
	linkedUserNum = 0;
	print("menuIndex = ", menuIndex);
	if (menuIndex!=(menuSize-1))
	{
		
		contentSourceTitle = getStringArrayAt(contentSourceTitleArray,menuIndex);
		contentSourceSlug = getStringArrayAt(contentSourceSlugArray,menuIndex);
		contentSourceAllowUnboundUser = getStringArrayAt(contentSourceAllowUnboundUserArray,menuIndex);
		contentSourceMethod = getStringArrayAt(contentSourceMethodArray,menuIndex);
		contentSourceSearchable = getStringArrayAt(contentSourceSearchableArray,menuIndex);
		contentSourceImageUrl = getStringArrayAt(contentSourceImageUrlArray,menuIndex);
		
		if (contentSourceAllowUnboundUser=="false")
		{
			itemDisplayArray = pushBackStringArray(itemDisplayArray,"Add New User");
			itemScriptArray = pushBackStringArray(itemScriptArray,"onAddNewUser");
			itemSize  = itemSize +1;
			
			
			executeScript("onGetBoundUsers");
			
			if (linkedUserNum&gt;1)
			{
				itemDisplayArray = pushBackStringArray(itemDisplayArray,"Select different user");
				itemScriptArray = pushBackStringArray(itemScriptArray,"onSelectUser");
				itemSize  = itemSize +1;
			}
			
			if (linkedUserNum&gt;0)
			{
				itemDisplayArray = pushBackStringArray(itemDisplayArray,"Remove linked user from "+contentSourceTitle+" from Mediafly");
				itemScriptArray = pushBackStringArray(itemScriptArray,"onRemoveBoundUser");
				itemSize  = itemSize +1;
			}
			
		}
	
		itemDisplayArray = pushBackStringArray(itemDisplayArray,"Remove "+contentSourceTitle+" from Mediafly");
		itemScriptArray = pushBackStringArray(itemScriptArray,"onRemoveContentSource");
		itemSize  = itemSize +1;
		
		executeScript("onSaveContentSourceInfo");
	}
	redrawDisplay();
	null;
</onUpdateItem>

<!--2to3  or 3to2 or 3to4 or 4to3-->
<onQuitUpdateItem>
	if (itemSize==2)
	{
		
		itemDisplayArray = deleteStringArrayAt(itemDisplayArray,1);
		itemScriptArray = deleteStringArrayAt(itemScriptArray,1);

		itemSize = itemSize -1;
		
		itemDisplayArray = pushBackStringArray(itemDisplayArray,"Remove linked user from "+contentSourceTitle+" from Mediafly");
		itemScriptArray = pushBackStringArray(itemScriptArray,"onRemoveBoundUser");
		itemSize  = itemSize +1;

		itemDisplayArray = pushBackStringArray(itemDisplayArray,"Remove "+contentSourceTitle+" from Mediafly");
		itemScriptArray = pushBackStringArray(itemScriptArray,"onRemoveContentSource");
		itemSize  = itemSize +1;

		print("Item Change");
		print(itemDisplayArray);
		print(itemScriptArray);
	
	}
	else if (itemSize==3)
		{
			if (linkedUserNum==0)
			{
				itemDisplayArray = deleteStringArrayAt(itemDisplayArray,2);
				itemScriptArray = deleteStringArrayAt(itemScriptArray,2);
				itemSize = itemSize -1;
				itemDisplayArray = deleteStringArrayAt(itemDisplayArray,1);
				itemScriptArray = deleteStringArrayAt(itemScriptArray,1);
				itemSize = itemSize -1;
				
				itemDisplayArray = pushBackStringArray(itemDisplayArray,"Remove "+contentSourceTitle+" from Mediafly");
				itemScriptArray = pushBackStringArray(itemScriptArray,"onRemoveContentSource");
				itemSize  = itemSize +1;	
			}
			else if (linkedUserNum&gt;1)
			{
				itemDisplayArray = deleteStringArrayAt(itemDisplayArray,2);
				itemScriptArray = deleteStringArrayAt(itemScriptArray,2);
				itemSize = itemSize -1;
				itemDisplayArray = deleteStringArrayAt(itemDisplayArray,1);
				itemScriptArray = deleteStringArrayAt(itemScriptArray,1);
				itemSize = itemSize -1;

				itemDisplayArray = pushBackStringArray(itemDisplayArray,"Select different user");
				itemScriptArray = pushBackStringArray(itemScriptArray,"onSelectUser");
				itemSize  = itemSize +1;

				itemDisplayArray = pushBackStringArray(itemDisplayArray,"Remove linked user from "+contentSourceTitle+" from Mediafly");
				itemScriptArray = pushBackStringArray(itemScriptArray,"onRemoveBoundUser");
				itemSize  = itemSize +1;
				
				itemDisplayArray = pushBackStringArray(itemDisplayArray,"Remove "+contentSourceTitle+" from Mediafly");
				itemScriptArray = pushBackStringArray(itemScriptArray,"onRemoveContentSource");
				itemSize  = itemSize +1;	
				
			}
		
		}
		else if (itemSize ==4)
			{
				itemDisplayArray = deleteStringArrayAt(itemDisplayArray,3);
				itemScriptArray = deleteStringArrayAt(itemScriptArray,3);
				itemSize = itemSize -1;
				itemDisplayArray = deleteStringArrayAt(itemDisplayArray,2);
				itemScriptArray = deleteStringArrayAt(itemScriptArray,2);
				itemSize = itemSize -1;
				itemDisplayArray = deleteStringArrayAt(itemDisplayArray,1);
				itemScriptArray = deleteStringArrayAt(itemScriptArray,1);
				itemSize = itemSize -1;
				
				itemDisplayArray = pushBackStringArray(itemDisplayArray,"Remove linked user from "+contentSourceTitle+" from Mediafly");
				itemScriptArray = pushBackStringArray(itemScriptArray,"onRemoveBoundUser");
				itemSize  = itemSize +1;
				
				itemDisplayArray = pushBackStringArray(itemDisplayArray,"Remove "+contentSourceTitle+" from Mediafly");
				itemScriptArray = pushBackStringArray(itemScriptArray,"onRemoveContentSource");
				itemSize  = itemSize +1;	
			}

	null;
</onQuitUpdateItem>

<!--need input contentsource_slug-->
<onGetBoundUsers>
	
	linkedUserArray = null;

	linkedUserNum = 0;
	
	  md5_string = MD5(sharedKey, tokenId, contentSourceSlug );
	  
	  print("md5_string",md5_string);
	  urlBound = "http://api.mediafly.com/api/rest/2.0/Mediafly.ContentSources.GetBoundUsers?app_id="+app_id+"&amp;token=";
	  urlBound = urlBound + valtoken;
	  urlBound = urlBound + "&amp;contentSources=";
	  urlBound = urlBound + contentSourceSlug;
	  urlBound = urlBound + "&amp;call_sig=" + md5_string;
	  
	  print("urlBound:",urlBound);
	  
	  file = loadXMLFile(urlBound);
	  
	  if (file == null)
	  {
	    print("Load URL fail ", urlBound);
	  }
	  else
	  {
		    status = getXMLAttribute("response", "status");
		    print("status: ", status);
		    if(status == "fail")
		    {
		      err =  getXMLAttribute("response", "err", "message");
		      print ("error", err);
		    
		    }
		    else 
		     	  linkedUserNum = getXMLElementCount("response", "usersResponse","contentSource","users", "user");
		    
	    	     print("linked User Size = ", linkedUserNum);
	    	     
		     if (linkedUserNum &gt; 0)
		     {
		     	cnt = 0;

		     	while (1)
		     	{
		     		default = getXMLAttribute("response", "usersResponse","contentSource","users", "user", cnt, "default");
		     		linkedUser = getXMLAttribute("response", "usersResponse","contentSource","users", "user", cnt, "accountName");
		     		linkedUserArray = pushBackStringArray(linkedUserArray,linkedUser);
		     		
		     		cnt = cnt + 1;
		     		if (default == "true")
		     		{
		     			currentLinkedUser = linkedUser;
		     		}
		     		if (cnt==linkedUserNum)
		     		{
		     			break;
		     		}
		     		
		     	
		     	}
		     	
		     }
			
	   }
	null;
</onGetBoundUsers>

<onAddNewUser>
	print("execute on Add New User!");
	contentSourceMethod = getStringArrayAt(contentSourceMethodArray,menuIndex);
	print("Binding Method: ",contentSourceMethod);
	if (contentSourceMethod=="UsernamePasswordPin")
	{
		addNewUser_rss = "rss_file://./IMS_Modules/Mediafly/mediafly_AddNewUserPin.rss";
	}
	else
	{
		addNewUser_rss = "rss_file://./IMS_Modules/Mediafly/mediafly_AddNewUser.rss";
	}
	
	infoArray = doModalRss(addNewUser_rss);
	userName = getStringArrayAt(infoArray,0);
	passwd = getStringArrayAt(infoArray,1);
	pinCode = getStringArrayAt(infoArray,2);
	
	if (userName!=null&amp;&amp;passwd!=null)
	{
		print("Ready To Add New User");
		
		
		if (contentSourceMethod=="UsernamePasswordPin")
		{
			
			md5_string = MD5(sharedKey, tokenId, userName, passwd,pinCode,contentSourceSlug);
		        encodedP = urlEncode(password);
		        urlBind = "https://api.mediafly.com/api/rest/2.0/Mediafly.ContentSources.BindUser?app_id="+app_id+"&amp;token=";
		        urlBind = urlBind + valtoken;
		        urlBind = urlBind +"&amp;source=";
		        urlBind = urlBind +contentSourceSlug;
		        urlBind = urlBind + "&amp;accountName=" + userName;
		        urlBind = urlBind + "&amp;password=" + passwd;
		        urlBind = urlBind + "&amp;pin=" + pinCode;
		        urlBind = urlBind +"&amp;call_sig="+md5_string;
		}
		else if (contentSourceMethod=="UsernamePassword")
			{
				md5_string = MD5(sharedKey, tokenId, userName, passwd,contentSourceSlug);
			        encodedP = urlEncode(password);
			        urlBind = "https://api.mediafly.com/api/rest/2.0/Mediafly.ContentSources.BindUser?app_id="+app_id+"&amp;token=";
			        urlBind = urlBind + valtoken;
			        urlBind = urlBind +"&amp;source=";
			        urlBind = urlBind +contentSourceSlug;
			        urlBind = urlBind + "&amp;accountName=" + userName;
			        urlBind = urlBind + "&amp;password=" + passwd;
			        urlBind = urlBind +"&amp;call_sig="+md5_string;

			}
	            
	            print("url", urlBind);
	            file = loadXMLFile(urlBind);
	            if (file == null)
	            {
		              print("failed to load ", url);
		          
		            
	            }
	            else
	            {
		              status = getXMLAttribute("response", "status");
		              print ("BindMFUser status: ", status);
		              if ( status == "fail")
		              {
		                err =  getXMLAttribute("response", "err", "message");
		                print ("error", err);
		              
		                redrawDisplay();
		              }
		              else
		              {
		              		print("Add User OK!");
		              		executeScript("onAddLinkedUser");
		              		executeScript("onQuitUpdateItem");
		              		executeScript("onSaveContentSourceInfo");
		              		redrawDisplay();
		              }
	            }
	}
	
	null;
</onAddNewUser>

<onAddLinkedUser>

	 linkedUserArray = pushBackStringArray(linkedUserArray,userName);
	 linkedUserNum =  linkedUserNum +1;
 
	if (linkedUserNum==1)
	{
		
 
		currentLinkedUser = userName;
		
	} 
	null;
</onAddLinkedUser>

<onSelectUser>
	print("execute onSelectUser!");
	
	tmpfile = getStoragePath("tmp") +"mdfly_deleteusername.dat";
	writeStringToFile(tmpfile,linkedUserArray);

	selectLinkedUser_rss = "rss_file://./IMS_Modules/Mediafly/mediafly_DeleteLinkedUser.rss";

	selectUserName = doModalRss(selectLinkedUser_rss);

	print("select user Name : ",selectUserName);

	if (selectUserName!=null)
	{
		if (selectUserName!=currentLinkedUser)
		{
			 md5_string = MD5(sharedKey,tokenId,selectUserName,contentSourceSlug);
	                 print("md5 string", md5_string);
			 urlBind = "http://api.mediafly.com/api/rest/2.0/Mediafly.ContentSources.SetUserAsDefault?app_id="+app_id+"&amp;token=";
			 urlBind = urlBind + valtoken;
			 urlBind = urlBind +"&amp;source=";
			 urlBind = urlBind + contentSourceSlug;
			 urlBind = urlBind + "&amp;accountName=" + selectUserName;
			 urlBind = urlBind + "&amp;call_sig=";
			 urlBind = urlBind + md5_string;

		          print("url: ", urlBind);
		          file = loadXMLFile(urlBind);

		          if (file == null)
		          {
		            print("failed to load ", url);
		            titleString = "Sign in failed!";
		            redrawDisplay();
		          }
		          else
		          {
			            status = getXMLAttribute("response", "status");
			            print ("SetMFUserAsDefault status: ", status);
			            if ( status == "fail")
			            {
			              err =  getXMLAttribute("response", "err", "message");
			              print ("error", err);
			            }
			            else
			            {
			            	print("Select user OK!");
			            	currentLinkedUser = selectUserName;
			            	executeScript("onSaveContentSourceInfo");
			            	redrawDisplay();
			            }
			  }
		}
	}
	
	
	null;
</onSelectUser>

<onRemoveBoundUser>
	print("execute onRemoveBoundUser!");
	
	tmpfile = getStoragePath("tmp") +"mdfly_deleteusername.dat";
	writeStringToFile(tmpfile,linkedUserArray);

	deleteLinkedUser_rss = "rss_file://./IMS_Modules/Mediafly/mediafly_DeleteLinkedUser.rss";

	deleteUserName = doModalRss(deleteLinkedUser_rss);

	print("delete user Name : ",deleteUserName);
	if (deleteUserName!=null)
	{
		print("I have a delete user Name");

		md5_string = MD5(sharedKey,tokenId, deleteUserName,contentSourceSlug);
		        
		print("md5 string", md5_string);
		urlUnbind = "http://api.mediafly.com/api/rest/2.0/Mediafly.ContentSources.UnbindUser?app_id="+app_id+"&amp;token=";
		urlUnbind = urlUnbind + valtoken;
		urlUnbind = urlUnbind +"&amp;source=";
		urlUnbind = urlUnbind + contentSourceSlug;
		urlUnbind = urlUnbind + "&amp;accountName=" + deleteUserName;
		urlUnbind = urlUnbind + "&amp;call_sig=";
		urlUnbind = urlUnbind + md5_string;

		 file = loadXMLFile(urlUnbind);
		 if (file == null) 
		{
			print("Load URL fail ", urlUnbind);
		}
		else
		{
			 status = getXMLAttribute("response", "status");
			 print ("status", status);
			if ( status == "fail")
			{
				err =  getXMLAttribute("response", "err", "message");
				print ("error", err);
			}
			else
			{
				print("Delete Ok");
				executeScript("onDeleteLinkedUser");
				if (linkedUserNum==0)
					executeScript("onQuitUpdateItem");
				executeScript("onSaveContentSourceInfo");
				redrawDisplay();
			}
		}
	}
	null;
</onRemoveBoundUser>

<!--need input :deleteUserName-->
<onDeleteLinkedUser>
	cnt = 0;
	while (cnt &lt;linkedUserNum &amp;&amp;getStringArrayAt(linkedUserArray,cnt)!=deleteUserName)
	{
		cnt = cnt +1;
	}
	linkedUserArray = deleteStringArrayAt(linkedUserArray,cnt);
	linkedUserNum = linkedUserNum -1;

	if (currentLinkedUser==deleteUserName)
	{
		currentLinkedUser = null;
		print("delete currentLinkedUser");
	}
	else
	{
		print("Not delete currentLinkedUser"); 
	}
		
 	null;
</onDeleteLinkedUser>




<onRemoveContentSource>
	  print("execute onRemoveContentSource!");
	  md5_string = MD5(sharedKey,tokenId,contentSourceSlug );
          print("md5 string", md5_string);
          url = "http://api.mediafly.com/api/rest/2.0/Mediafly.ContentSources.RemoveContentSource?app_id="+app_id+"&amp;token=";
          url = url + valtoken;
	  url = url + "&amp;source=";
	  url = url + contentSourceSlug;
          url = url + "&amp;call_sig=";
          url = url + md5_string;
          
          print("url=",url);
          file = loadXMLFile(url);
       
          if (file == null) 
          {
	          
	           print("Load URL fail ", url);
          }
          else 
          {
		  status = getXMLAttribute("response", "status");
		  if (status=="fail")
	          {
	          	errMessage = getXMLAttribute("response","err","message");
	          	print("err:",errMessage);
	          }
	          else
	          {
	          	print("Remove Content Source OK!");
	          	executeScript("onDeleteMenu");
	          	setRefreshTime(100);
	          	redrawDisplay();
	          }
		  
          }

	
	null;
</onRemoveContentSource>

<menu_template>
	<onClick>
		menuIndex = getFocusMenuIndex();
		str = getStringArrayAt(menuArray,menuIndex);
		print("menu_template:",menuIndex);
		if (str=="$[Add New Content]")
		{
			print("Add New Content");
			getmcode_rss = "rss_file://./IMS_Modules/Mediafly/mediafly_GetMcode.rss";
			mcode = doModalRss(getmcode_rss);
			if (mcode != null)
			{
				print("mcode: ",mcode);
				executeScript("onAddContentSource");
				executeScript("onContentSourcesDeviceAuthenticate");
				
				if (action_status == "success")
				{
					action_status = "failure";
					executeScript("onUpdateMenu");
					setRefreshTime(100);
				}
			}		
			
			
		}
		else
		{
			print("Content Source");
			executeScript("onRefresh");
			print(">>>>>>>>>>>>>>>>>>menu_template>>>>>>>>>>");
			postMessage("right");
		}
		null;
	</onClick>
</menu_template>



<!-- item_template is the element to substitute item element when the elements under item element does not exist -->
<item_template>
   <onClick>
   	itemIndex = getQueryItemIndex();
   	print("Item Index= ",itemIndex);
   	print(getStringArrayAt(itemScriptArray,itemIndex));
	executeScript(getStringArrayAt(itemScriptArray,itemIndex));
        null;
   </onClick>

  <displayTitle>
    <script>
      getStringArrayAt(userNameArray , -1);
    </script>
    <link>
      <!-- call rss to delete user here-->
      null;
    </link>
  </displayTitle>
  

  <link>
    <!-- call rss to delete user here-->
    null;
  </link>

</item_template>

<channel>
	<!--<title> Mediafly add user</title>-->
  <title> </title>  
	<!--<link>mediafly_adduser.rss</link> -->
  null;
	<!-- use itemSize element to describe how many items in the page -->
	
	<itemSize>
		<script>
      			itemSize;
    		</script>
	</itemSize>
	
	<menuSize>
		<script>
			menuSize;
		</script>
	</menuSize>
</channel>


</rss>

