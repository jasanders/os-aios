<?xml version='1.0' ?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">
<bookmark> mediafly_menu_with_favorite </bookmark>

  <onEnter>
      print("OnEnter----------------------mediafly_menu_with_favorite.rss");
      bRedraw = 0;
      currentFocusItem = 0;
      print("OnEnter bGotChannels: ",bGotChannels);
      entryCount = 1;
      prepareAnimation();
      showIdle();
      /* read saved token - tp*/
      fileName= getStoragePath("tmp") + "mediaflyToken.dat";
      tokenArray = readStringFromFile(fileName);
      valtoken = getStringArrayAt(tokenArray, 0);
      tokenId = getStringArrayAt(tokenArray, 1);
      tokenTime = getStringArrayAt(tokenArray, 2);
      print("tokenTime: ",tokenTime);
      
  </onEnter>
  
<!-- get channels -->
  <script>
    entryCount += 1;
    bGotChannels = 0;
    channelCnt = 0;
    displayItemCnt = 0;
    channelTitleArray = null;
    channelSlugArray  = null;
    imageUrlArray 	  = null;
    episodeCountArray = null;
    audioChannelTitleArray = null;
    audioChannelSlugArray  = null;
    audioImageUrlArray 	  = null;
    audioEpisodeCountArray = null;
    mediaTypeFiler = null;
    valtoken = null;


    storagePathdefaultUserName = getStoragePath("key") + "mdfly_defaultusername.dat";
    defaultUserName = readStringFromFile(storagePathdefaultUserName);
    if(defaultUserName == null || defaultUserName == "")
      defaultUserName = VtunergetMACaddress(); /* get some info tsp*/
    if(defaultUserName == null || defaultUserName == "")
      defaultUserName = "001075FF0090"; /* get some info tsp*/


    print("entryCount: ", entryCount);
  </script>

  <submenu>
    <title>$[MF_POPULAR_VIDEO]</title>
    <onClick>
        print("enter Popular Video submenu");
        executeScript("getToken");        
        bRedraw = 1;
        if(bGotChannels &lt; 1)
        {
          mediaTypeFilter = "video";
          executeScript("getChannels");
          mediaTypeFilter = "audio";
          executeScript("getChannels");
        }
        else executeScript("deleteDisplayArray");
        displayTitleArray = channelTitleArray;
        if(displayItemCnt != channelCnt)
            bRedraw = 1;
        displayItemCnt = channelCnt;
        print("displayTitleArray: ",displayTitleArray);
        print("displayItemCnt2: ",displayItemCnt);
        if(bRedraw == 1)
        {
          showIdle();
          redrawDisplay();        
          cancelIdle();
        }
        /*save filter base on menu index */
        filterFile = getStoragePath("tmp") + "mdflyfilter.dat";
        writeStringToFile(filterFile, "video");
    </onClick>
    null;
  </submenu>

  <submenu>
    <title>$[MF_POPULAR_AUDIO]</title>
    <onClick>
        print("enter Popular audio submenu");
        executeScript("getToken");        
        bRedraw = 1;
        if(bGotChannels &lt; 1)
        {
          mediaTypeFilter = "video";
          executeScript("getChannels");
          mediaTypeFilter = "audio";
          executeScript("getChannels");
        }
        else executeScript("deleteDisplayArray");
        displayTitleArray = audioChannelTitleArray;
        if(displayItemCnt != audioChannelCnt)
          bRedraw = 1;
        displayItemCnt = audioChannelCnt;
        print("displayTitleArray3: ",playTitleArray);
        print("displayItemCnt3: ",displayItemCnt);
        if(bRedraw == 1)
        {
          showIdle();
          redrawDisplay();        
          cancelIdle();
        }
        /*save filter base on menu index*/
        filterFile = getStoragePath("tmp") + "mdflyfilter.dat";
        writeStringToFile(filterFile, "audio");
    </onClick>
    null;
  </submenu>


  <submenu>
    <title>$[YOUTUBE_SEARCH]</title>

    <onClick>
      <script>
        mylink = null;
        keyword= getInput("Enter keyword");
        if (keyword==null)
          print("enter null");
        else 
        {
          print("The search Keyword is ", keyword);
          storagePathMediaflySearch = getStoragePath("tmp");
          storagePathMediaflySearch = storagePathMediaflySearch + "mediaflySearch.dat";
          writeStringToFile(storagePathMediaflySearch, keyword);
          mylink = "rss_file://./IMS_Modules/Mediafly/mediafly_search.rss";
        }
        mylink;
      </script>
    </onClick>
  </submenu>

  <submenu>
    <title>$[MF_USER_ACCOUNT]</title>
    <link>rss_file://./IMS_Modules/Mediafly/mediafly_adduser.rss</link>
  </submenu>

  <!--
  <submenu>
    <title>Content Sources</title>
    <link>rss_file://./IMS_Modules/Mediafly/mediafly_browsesources.rss</link>
  </submenu>
-->

<!-- the global onEnter element will be executed when enter or re-enter the page -->
  <mediaDisplay name="threePartsView"
     showDefaultInfo="no"
     autoSelectMenu="no"
     autoSelectItem="no"
     forceFocusOnItem="yes"
     selectMenuOnRight="no"
		
     itemPerPage = "8"

     imageLeftSide="image/LeftBack_image.jpg"
     imageRightSide="image/RightBack_image.jpg"
     imageFocus="image/list_select_bar.fsp"
     imageParentFocus ="null"
     parentFocusFontColor="200:200:200"



     sideLeftWidthPC= "29.5"
     sideRightWidthPC= "70.7"
     sideTopHeightPC= "0"
     sideBottomHeightPC= "0"
		
     backgroundColor="28:35:51"
     sideColorLeft="28:35:51"
     sideColorRight="28:35:51"
		
     headerImageXPC = "11.1"
     headerImageYPC = "8"
     headerImageWidthPC = "11"
     headerImageHightPC = "10"
		
     headerCapWidthPC = "0"
     headerWidthPC = "0"

     menuXPC = "8"
     menuYPC = "15"
     menuWidthPC = "22"
     menuHeightPC = "6"
     menuPerPage = "10"
		
     itemImageXPC = "33.2"
     itemImageYPC = "16.5"
     itemImageCapYPC = "3.5"
     itemImageWidthPC = "0"
     itemImageHeightPC = "0"
                
     itemXPC = "35"
     itemYPC = "15.5"
     itemWidthPC = "46"
     itemHeightPC = "8.5"
     itemBackgroundColor="28:35:51"

		
     popupXPC="8"
     popupYPC="15"
     popupWidthPC="22.3"
     popupHeightPC="5.5"
     popupFontSize="13"
     popupBorderColor="28:35:51"
     popupForegroundColor="255:255:255"
     popupBackgroundColor="28:35:51"


           idleImageXPC="83.12"
           idleImageYPC="89.58"
           idleImageWidthPC="3.1"
           idleImageHeightPC="5.5"
		
     showHeader="no"
  >


    <idleImage> image/POPUP_LOADING_01.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_02.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_03.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_04.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_05.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_06.fsp </idleImage>


    <onUserInput>

      userInput = currentUserInput();
      focusMenuIndex = getFocusMenuIndex();
      focusItemState = getDrawingItemState();
      print("Input:", userInput);
      print("focusMenuIndex: ", focusMenuIndex, "focusItemState: ",focusItemState);

      ret = "false";
      if (userInput == "enter")
      {
        focusIndex = getFocusItemIndex();      
        if(focusIndex &gt; -1)
        {
          lastSelectedIndex = getSelectedItemIndex();
          if(focusMenuIndex == 0)
            slugCh = getStringArrayAt(channelSlugArray, focusIndex);
          else if (focusMenuIndex == 1)
            slugCh = getStringArrayAt(audioChannelSlugArray, focusIndex);
          storagePathMediaflyChannel = getStoragePath("tmp");
          storagePathMediaflyChannel = storagePathMediaflyChannel + "mediaflyChannel.dat";
          writeStringToFile(storagePathMediaflyChannel, slugCh);
          print(channelSlugArray);
          print("selected channel slug (onClick)", slugCh);
        }
      } /* usr input is enter */
      if (userInput == "right"  &amp;&amp; focusItemState == "focus")
        ret = "true"; /* do nothing here */
        
      /* block left key */
      if (userInput == "left"  &amp;&amp; focusItemState != "focus")
        ret = "true"; /* do nothing here */
      if(focusItemState != "focus" &amp;&amp; (userInput == "up" || userInput == "down"))
      {
          if(displayItemCnt &gt; 0)
          {
            displayItemCnt = 0;
            showIdle();
            redrawDisplay();
            cancelIdle();
          }
      }
      print("exit onUserInput ret: ", ret);
      ret;
    </onUserInput>
    
    <script>
      focusItemState = getDrawingItemState();
      focusMenuIndex = getFocusMenuIndex();
      print("bGotChannels: ",bGotChannels, "focusItemState :", focusItemState);

    </script>
    
    <!-- top indicator -->
    <image offsetXPC="32" offsetYPC="13.5" widthPC="40" heightPC="1.5" redraw="yes">
      <script>
        if(userInput == "up" || userInput == "down")
        {
          index = getFocusItemIndex();
          itemCount = getPageInfo("itemCount");
          print("itemCount", itemCount);
          print("focusIndex", index);
          if (itemCount &lt; 8) 
          {
            "./IMS_Modules/Mediafly/image/arrow_cover.fsp";
          }
          else 
          {
            if (index &gt; 4) 
            {
            "./IMS_Modules/Mediafly/image/arrow_up.fsp";
            }
            else
            {
            "./IMS_Modules/Mediafly/image/arrow_cover.fsp";
            }
          }
        } else "./IMS_Modules/Mediafly/image/arrow_cover.fsp"; /* bug when there is no user activitiy on first entry tsp */
      </script>
    </image>

    <!-- bottom indicator -->
    <image offsetXPC="32" offsetYPC="85" widthPC="40" heightPC="1.5" redraw="yes">
      <script>
        if(userInput == "up" || userInput == "down")
        {
          index = getFocusItemIndex();
          itemCount = getPageInfo("itemCount");
          if (itemCount &lt; 8) 
          {
            "./IMS_Modules/Mediafly/image/arrow_cover.fsp";
          }
          else 
          {
            if (index &gt; (itemCount-4))
            {
              "./IMS_Modules/Mediafly/image/arrow_cover.fsp";
            }
            else
            {
               "./IMS_Modules/Mediafly/image/arrow_down.fsp";
            }
          }
        } else "./IMS_Modules/Mediafly/image/arrow_cover.fsp"; /* bug when there is no user activitiy on first entry tsp */
      </script>
    </image>

    <image offsetXPC= "6.3"  offsetYPC= "4.2" widthPC="10.66" heightPC="7.5" >
    	./IMS_Modules/Mediafly/image/MEDIAFLY_UPLEFT_LOGO.jpg
    </image>
  </mediaDisplay>
  
  <item_template>
    <onClick>
      <script>
        print("---OnClick---");
      </script>
    </onClick>
    <displayTitle>
      <script>
        getStringArrayAt(displayTitleArray , -1);
      </script>
    </displayTitle>

    <media:thumbnail>
      <script>
        getStringArrayAt(imageUrlArray , -1);
      </script>
    </media:thumbnail>
    <link>
    	rss_file://./IMS_Modules/Mediafly/mediafly_channel.rss
    </link>
  </item_template>
  
  <channel>
	<title></title>
	<!--<link>http://www.seagate.com/support/software/Theater/Mediafly/v1/mediafly_menu.rss</link> -->
    null;
    <itemSize>
      <script>
        displayItemCnt;
      </script>
    </itemSize>

  </channel>
  
  <deleteDisplayArray>
    /* delete title display channel or episode name tsp */
    delCnt= 0;
    print("----enter deleteDisplayArray----");
    if(displayTitleArray != null)
    {
      while(displayTitleArray != null &amp;&amp; getStringArrayAt(displayTitleArray,0) != null)
      {
        displayTitleArray = deleteStringArrayAt(displayTitleArray,0);
        delCnt += 1;
      } 
    }
    print("----displayTitleArray in deleteDisplayArray: ",displayTitleArray, "delCnt:", delCnt);
  </deleteDisplayArray>

  <getChannel>
    md5_string = MD5("S34g4t37230c938be8341bd800df007c066f90d","__favorites__", "title,description,imageUrl,channel,published", defaultUserName, defaultUserName);
    print("md5 string", md5_string);

    url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Channels.GetChannel?app_id=7230c938be8341bd800df007c066f90d&amp;token=";
    url = url + valtoken;
    url = url + "&amp;thirdPartyUserID=" + defaultUserName;
    url = url + "&amp;channelSlug=__favorites__";
    url = url + "&amp;user_context=" + defaultUserName;
    url = url + "&amp;includeAttributes=title,description,imageUrl,channel,published";
    url = url + "&amp;call_sig=";
    url = url + md5_string;


    print("url = ", url);

    file = loadXMLFile(url);
    if (file == null)
    {
      itemSize = 0;
      print("Load URL fail ", url);
    }
    else
    {
      status = getXMLAttribute("response", "status");
      print("status = ", status);
      itemSize = getXMLElementCount("response", "channel", "episode");
      print("itemSize = ", itemSize);
    }
    if(status == "fail")
    {
      err =  getXMLAttribute("response", "err", "message");
      print ("error", err);
    }
    if (itemSize &gt; 0)
    {
      /* clean up array if neccessary stx */
      count = 0;
      while(episodeTitleArray != null &amp;&amp; getStringArrayAt(episodeTitleArray,0) != null)
      {
        slugArray = deleteStringArrayAt(slugArray, 0);
        episodeTitleArray = deleteStringArrayAt(episodeTitleArray, 0);
        descriptionArray = deleteStringArrayAt(descriptionArray, 0);
        channelArray = deleteStringArrayAt(channelArray, 0);
        publishedArray = deleteStringArrayAt(publishedArray, 0);
        imageUrlArray = deleteStringArrayAt(imageUrlArray, 0);
        count += 1;
      }
      print("delete count1:  ", count);
      count=0;
      itemCnt = 0;
      while(1)
      {
        slug        = getXMLAttribute("response", "channel", "episode", count, "slug");
        imageUrl = getXMLAttribute("response", "channel", "episode",  count,"imageUrl");
        episodeTitle = getXMLAttribute("response", "channel", "episode", count, "title");
        channel      = getXMLAttribute("response", "channel", "episode", count, "channel");
        published    =  getXMLAttribute("response", "channel", "episode", count,"published");
        description  =  getXMLAttribute("response", "channel", "episode", count,"description");
        episodeCount  =  getXMLAttribute("response", "channel", "episode", count,"episodeCount");
        print("++++++++++++++++++++++++episodeTitle: ",episodeTitle);
        if(slug != null &amp;&amp; slug != "")
        {
            slugArray     = pushBackStringArray(slugArray, slug); /* slug array use for favorite tsp */
            episodeTitleArray     = pushBackStringArray(episodeTitleArray, episodeTitle);
            descriptionArray     = pushBackStringArray(descriptionArray, description);
            channelArray     = pushBackStringArray(channelArray, channel);
            publishedArray     = pushBackStringArray(publishedArray, published);
            imageUrlArray     = pushBackStringArray(imageUrlArray, imageUrl); 
            itemCnt += 1;
        }
        count += 1;
        if (count &gt; itemSize)
        {
          break;
        }
      } /* end_while tsp*/
    } /* end if (itemSize > 0) tp*/    
    print("episodeTitleArray:",episodeTitleArray);
    print("itemCnt:",itemCnt);
    
  </getChannel>

  <getChannels>
          print("++++++++++++++++enter getChannels");
          md5_string = MD5(valtoken, "true", "Strip","mediaType", "app_context_system");
          print("md5 string", md5_string);
          url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Channels.GetChannels?app_id=7230c938be8341bd800df007c066f90d&amp;token=";
          url = url + valtoken;
          url = url + "&amp;capitalizeChannelNames=true";
          url = url + "&amp;newlineFormat=Strip";
          url = url + "&amp;mediaType=" + mediaTypeFilter;
          url = url + "&amp;user_context=app_context_system";
          url = url + "&amp;call_sig=";
          url = url + md5_string;
          file = loadXMLFile(url);
          cancelIdle();
          if (file == null) 
          {
            itemSize = 0;
            print("Load URL fail ", url);
          }
          else 
          {
            itemSize = getXMLElementCount("response", "channels", "channel");
            print("ItemSize1 = ", itemSize);
          }
          if (itemSize &gt; 0) 
          {
            count=0;
            audioChannelCnt = 0;
            bGotChannels = 1;
            /* clean up array if need to stx */
            if(mediaTypeFilter == "video")
            {
              channelCnt = 0;            
              while(channelTitleArray != null &amp;&amp; getStringArrayAt(channelTitleArray,0) != null)
              {
                  channelTitleArray = deleteStringArrayAt(channelTitleArray, 0);    
                  channelSlugArray  = deleteStringArrayAt(channelSlugArray,0);    
                  imageUrlArray 	  = deleteStringArrayAt(imageUrlArray ,0);    
                  episodeCountArray = deleteStringArrayAt(episodeCountArray,0);         
                  count += 1;
              }
            }
            else
            {
              count = 0;
              audioChannelCnt = 0;              
              while(audioChannelTitleArray != null &amp;&amp; getStringArrayAt(audioChannelTitleArray,0) != null)
              {
                  audioChannelTitleArray = deleteStringArrayAt(audioChannelTitleArray, 0);    
                  audioChannelSlugArray  = deleteStringArrayAt(audioChannelSlugArray,0);    
                  audioImageUrlArray 	  = deleteStringArrayAt(audioImageUrlArray ,0);    
                  audioEpisodeCountArray = deleteStringArrayAt(audioEpisodeCountArray,0);         
                  count += 1;
              }
            
            }
            print("string deleted:",count);
            count = 0;
            while(1)
            {
              title       = getXMLAttribute("response", "channels", "channel", count, "name");
              slug        = getXMLAttribute("response", "channels", "channel", count, "slug");
              imageUrl    = getXMLAttribute("response", "channels", "channel", count, "imageUrl");
              episodeCount= getXMLAttribute("response", "channels", "channel", count, "episodeCount");
              if(title != "All (Mix)"  &amp;&amp; title != null &amp;&amp; episodeCount > 0)
              {
              
                if(mediaTypeFilter == "video")
                {
                  channelTitleArray  = pushBackStringArray(channelTitleArray, title);
                  channelSlugArray     = pushBackStringArray(channelSlugArray, slug);
                  /*imageUrlArray = pushBackStringArray(imageUrlArray, imageUrl);*/
                  imageUrlArray = pushBackStringArray(imageUrlArray, "./IMS_Modules/Mediafly/image/arrow_cover.fsp");
                  episodeCountArray   = pushBackStringArray(episodeCountArray, episodeCount);
                  channelCnt += 1;
                }
                else
                {
                  audioChannelTitleArray  = pushBackStringArray(audioChannelTitleArray, title);
                  audioChannelSlugArray     = pushBackStringArray(audioChannelSlugArray, slug);
                  /*imageUrlArray = pushBackStringArray(imageUrlArray, imageUrl);*/
                  audioImageUrlArray = pushBackStringArray(audioImageUrlArray, "./IMS_Modules/Mediafly/image/arrow_cover.fsp");
                  audioEpisodeCountArray   = pushBackStringArray(audioEpisodeCountArray, episodeCount);
                  audioChannelCnt += 1;
                }
              } /*end if(title != "All (Mix)"  &amp;&amp; title != null) tsp */
              count += 1;
              if (count &gt; itemSize)
              {
                break;
              }
            } /* end while(1) tsp */
          } /* end if (itemSize &gt; 0) tsp */

    if(mediaTypeFilter == "video")
    {
      print("channelCnt: ",channelCnt);
      print("channelTitleArray: ",channelTitleArray);
    }
    else 
    {
      print("audioChannelCnt: ",audioChannelCnt);
      print("audioChannelTitleArray: ",audioChannelTitleArray);
      }
  </getChannels>

  <getToken>
    /* read saved token - tp*/
    fileName= getStoragePath("tmp") + "mediaflyToken.dat";
    tokenArray = readStringFromFile(fileName);
    valtoken = getStringArrayAt(tokenArray, 0);
    tokenId = getStringArrayAt(tokenArray, 1);
    tokenTime = getStringArrayAt(tokenArray, 2);
    print("tokenTime: ",tokenTime);

    if(valtoken == null || tokenTime == null || (getSystemTime() - 3300) &gt; tokenTime)
    {
      if(tokenArray != null)
        {
          /* delete all elements - tp */
          tokenArray = deleteStringArrayAt(tokenArray,0);
          tokenArray = deleteStringArrayAt(tokenArray,0);
          tokenArray = deleteStringArrayAt(tokenArray,0);
        }

      url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Authentication.GetToken?app_id=7230c938be8341bd800df007c066f90d";
      url = url + "&amp;thirdPartyUserID=" + defaultUserName;
    print("url", url);
    file = loadXMLFile(url);

    if (file == null)
    {
      print("failed to load ", url);
      titleString = "Sign in failed!";
      print("call redrawDisplay()");
      redrawDisplay();
      }
      else
      {
        valtoken  = getXMLText("response","token");
        tokenId   = getXMLAttribute("response","token","id");
        print("token = ", valtoken);
        print("token id = ", tokenId);

        if ( valtoken != null )
        {
          storagePathMediaflyToken = getStoragePath("tmp");
          storagePathMediaflyToken = storagePathMediaflyToken + "mediaflyToken.dat";
          tokenArray = pushBackStringArray(tokenArray, valtoken);
          tokenArray = pushBackStringArray(tokenArray, tokenId);
          tokenArray = pushBackStringArray(tokenArray, getSystemTime());

          writeStringToFile(storagePathMediaflyToken, tokenArray);
          print("token", tokenArray);
          print("write to file ", storagePathMediaflyToken);
        }
      }
    } /*end if(valtoken == null.... */    
  </getToken>

</rss>
