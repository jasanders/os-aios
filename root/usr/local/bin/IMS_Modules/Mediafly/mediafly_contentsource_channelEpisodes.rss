<?xml version="1.0" ?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <onEnter>
      print("onEnter>>>>>>>>>>>-----Mediafly_ContentSource_ChannelEpisodes.rss");

      episodeLink = "rss_file://./IMS_Modules/Mediafly/mediafly_contentsource_episode.rss";
      print("episodeLink: " , episodeLink);
      
      curChannel = "$[Channel - ]" + " " + getStringArrayAt(defaultChannelTitleArray, 0 );
        if(getPageInfo("itemCount") &lt; 1)
      {
	      curChannel = "$[No Episode Found]";
	      datePub = "";
      }
  </onEnter>
  <script>

    /* read saved token - tp*/
    fileName= getStoragePath("tmp") + "mediaflyToken.dat";
    tokenArray = readStringFromFile(fileName);
    valtoken = getStringArrayAt(tokenArray, 0);
    tokenId = getStringArrayAt(tokenArray, 1);
    tokenTime = getStringArrayAt(tokenArray, 2);
    print("tokenTime: ",tokenTime);

      keyFilePath = getStoragePath("key") + "__mdfly_key.dat";
  decryptionKeyArray = decFile(keyFilePath);
   
    sharedKey = getStringArrayAt(decryptionKeyArray,0);
    app_id =getStringArrayAt(decryptionKeyArray,1);
  
    print("KeyArray =",decryptionKeyArray);
    print("SharedKey= ", sharedKey);
    print("app_id= ",app_id);

  if(valtoken == null || tokenTime == null || (getSystemTime() - 3300) &gt; tokenTime)
  {
    if(tokenArray != null)
    {
       /* delete all elements - tp */
       tokenArray = deleteStringArrayAt(tokenArray,0);
       tokenArray = deleteStringArrayAt(tokenArray,0);
       tokenArray = deleteStringArrayAt(tokenArray,0);
    }
      url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Authentication.GetToken?app_id="+app_id;
      url = url + "&amp;thirdPartyUserID=" + VtunergetMACaddress();
      print("url", url);
      print("3");
      file = loadXMLFile(url);
      print("4");

      if (file == null)
      {
        print("failed to load ", url);
        titleString = "Sign in failed!";
        redrawDisplay();
      }
      else
      {
        valtoken  = getXMLText("response","token");
        tokenId   = getXMLAttribute("response","token","id");
        print("token = ", valtoken);
        print("token id = ", tokenId);

        if ( valtoken != null )
        {
          tokenArray = pushBackStringArray(tokenArray, valtoken);
          tokenArray = pushBackStringArray(tokenArray, tokenId);
          tokenArray = pushBackStringArray(tokenArray, getSystemTime());

          storagePathMediaflyToken = getStoragePath("tmp")  + "mediaflyToken.dat";
          writeStringToFile(storagePathMediaflyToken, tokenArray);
          print("token", tokenArray);
          print("write to file ", storagePathMediaflyToken);
        }
      }
    }

    current_contentsource_file = getStoragePath("key")+"mdfly_tmpContentSource.dat";
    infoArray = readStringFromFile(current_contentsource_file);
    contentSourceTitle = getStringArrayAt(infoArray,0);
    contentSourceSlug = getStringArrayAt(infoArray,1);
    linkedUserName = getStringArrayAt(infoArray,2);
    contentSourceLogoUrl = "http://csassets.mediafly.com/" +contentSourceSlug+"/appThumb-114x114.fsp";
    print("contentSourceLogoUrl=",contentSourceLogoUrl);
    /* start read showSlug */
    fileName = getStoragePath("tmp") + "mediaflyshowSlug.dat";;
    showSlug = readStringFromFile(fileName);
    print("showSlug: ",showSlug);


    includeAttributes = "title,description,imageUrl,channel,published,url,mediaType";
    if (linkedUserName!=null)
    {
    	md5_string = MD5(sharedKey,tokenId,showSlug,"Strip","500",includeAttributes,contentSourceSlug,linkedUserName);
	url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Shows.GetEpisodesForShow?app_id="+app_id+"&amp;token=";
        url = url + valtoken;
        url = url + "&amp;showSlug=" + showSlug;
        url = url + "&amp;newlineFormat=Strip";
        url = url + "&amp;limit=500";
        url = url + "&amp;includeAttributes=title,description,imageUrl,channel,published,url,mediaType";
        url = url +"&amp;source="+contentSourceSlug;
        url = url + "&amp;user_context="+linkedUserName;
        url = url + "&amp;call_sig=";
	url = url + md5_string;
    }
    else
    {
    	md5_string = MD5(sharedKey,tokenId,showSlug,"Strip","500",includeAttributes,contentSourceSlug,"app_context_system");
	url = "http://api.mediafly.com/api/rest/2.0/Mediafly.Shows.GetEpisodesForShow?app_id="+app_id+"&amp;token=";
        url = url + valtoken;
        url = url + "&amp;showSlug=" + showSlug;
        url = url + "&amp;newlineFormat=Strip";
        url = url + "&amp;limit=500";
        url = url + "&amp;includeAttributes=title,description,imageUrl,channel,published,url,mediaType";
        url = url +"&amp;source="+contentSourceSlug;
        url = url + "&amp;user_context=app_context_system";
        url = url + "&amp;call_sig=";
	url = url + md5_string;
    }
    print("url= ",url);
    
    file = loadXMLFile(url);
    
    if (file == null)
    {
	    itemSize = 0;
	    print("Load URL fail ", url);
    }
    status = getXMLAttribute("response", "status");
    
    if(status == "fail")
    {
    	print("error: ", getXMLAttribute("response", "err", "message"));
    }
    else
    {
	    itemSize = getXMLAttribute("response", "episodes", "totalEpisodes");
	    print("Item Size = ", itemSize);
    }
    
    if (itemSize &gt; 0) 
    {
        count=0;
        itemCnt = 0;
        while(1)
        {
          title         = getXMLAttribute("response", "episodes", "episode", count, "title");
          showTitle     = getXMLAttribute("response", "episodes", "episode", count, "showTitle");
          slug          = getXMLAttribute("response", "episodes", "episode", count, "slug");
          description   = getXMLAttribute("response", "episodes", "episode", count, "description");
          imageUrl      = getXMLAttribute("response", "episodes", "episode", count, "imageUrl");
          episodeUrl      = getXMLAttribute("response", "episodes", "episode", count, "url");
          mediaType     = getXMLAttribute("response", "episodes", "episode", count, "mediaType");
          published     = getXMLAttribute("response", "episodes", "episode", count, "published");
          defaultChannelTitle = getXMLAttribute("response", "episodes", "episode", count, "defaultChannelTitle");

          if(title != null &amp;&amp; title != "" &amp;&amp; episodeUrl != null &amp;&amp; episodeUrl != "")
          {
            titleArray  = pushBackStringArray(titleArray, title);
            showTitleArray  = pushBackStringArray(showTitleArray, showTitle);
            slugArray     = pushBackStringArray(slugArray, slug);
            imageUrlArray = pushBackStringArray(imageUrlArray, imageUrl);
            episodeUrlArray = pushBackStringArray(episodeUrlArray, episodeUrl);
            descriptionArray   = pushBackStringArray(descriptionArray, description);
            mediaTypeArray   = pushBackStringArray(mediaTypeArray, mediaType);
            publishedArray   = pushBackStringArray(publishedArray, published);
            defaultChannelTitleArray   = pushBackStringArray(defaultChannelTitleArray, defaultChannelTitle);
            itemCnt += 1;
          }
          count += 1;
          if (count &gt; itemSize)
          {
              print("itemCnt2: ", itemCnt);
              break;
          }
        } /* end while */
    }
  </script>
  <mediaDisplay name="threePartsView" selectMenuOnRight="no"
    		showDefaultInfo="no"
		autoSelectMenu=no
		autoSelectItem=no
		forceFocusOnItem=yes
    
		
	        itemPerPage="5"
	     
       	        imageFocus=" "
	        imageParentFocus ="null"
	        parentFocusFontColor="255:255:0"
  

		sideLeftWidthPC= 0
		sideRightWidthPC= 100
		sideTopHeightPC= 0
		sideBottomHeightPC= 0
		
		backgroundColor=-1:-1:-1
		sideColorLeft=28:35:51 
		sideColorRight=28:35:51
		
		headerImageXPC = 11.1
		headerImageYPC = 8
		headerImageWidthPC = 11
		headerImageHightPC = 10
		headerCapWidthPC = 0
		headerWidthPC = 0

		menuXPC = 8
		menuYPC = 15
		menuWidthPC = 18
		menuHeightPC = 6
		menuPerPage = 10
		
		itemImageXPC = 18.3
		itemImageYPC = 32
		itemImageCapYPC = 3.5
		itemImageWidthPC = 5.58
		itemImageHeightPC = 9.9
		
		itemXPC = 26.7
		itemYPC = 31.5
		itemWidthPC = 58.5
		itemHeightPC =10.8
               showHeader = "no"
		itemBackgroundColor="-1:-1:-1"
		itemGap = "1.8"

		
		popupXPC=8
		popupYPC=15
		popupWidthPC=22.3
		popupHeightPC=5.5
		popupFontSize=13
		popupBorderColor=28:35:51 
		popupForegroundColor=255:255:255
		popupBackgroundColor=28:35:51 

	       idleImageXPC=83.12
	       idleImageYPC=89.58
	       idleImageWidthPC=3.1
	       idleImageHeightPC=5.5

    >

    <idleImage> image/POPUP_LOADING_01.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_02.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_03.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_04.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_05.fsp </idleImage>
    <idleImage> image/POPUP_LOADING_06.fsp </idleImage>

  	<backgroundDisplay  name=mediafly_channel_episodes_background>
		<image offsetXPC=0  offsetYPC= 0 widthPC=100 heightPC=100>
			<script>
				"./IMS_Modules/Mediafly/image/mediafly_bg_02-01.fsp";
			</script>
		</image>
	</backgroundDisplay>


    <onUserInput>
      <script>
        userInput = currentUserInput();
        ret = false;        
        if (userInput == "enter")
        {
          EntryTimes = EntryTimes + 1;
          focusIndex = getFocusItemIndex();
          print(" ************* EntryTimes = ", EntryTimes, "focusIndex:", focusIndex);
          print("focusIndex: ", focusIndex);
          episodeSlug = getStringArrayAt(slugArray, focusIndex);
          storagePathMediaflyEpisode = getStoragePath("tmp");
          storagePathMediaflyEpisode = storagePathMediaflyEpisode + "mediaflyEpisode.dat";
          writeStringToFile(storagePathMediaflyEpisode, episodeSlug);
          print("selected episode slug: ", episodeSlug);
        } 
        else if (userInput == "video_play") 
        {
          focusIndex = getFocusItemIndex();
          if(getStringArrayAt(mediaTypeArray, focusIndex) == "Video")
          {
             playUrl = getStringArrayAt(episodeUrlArray, focusIndex);
             playItemURL(playUrl,0);
             ret = "true";
          }
          else
          {
             /* go to next page and play audio */
             fileName = getStoragePath("tmp") + "mediaflyPlayUrl.dat";
             playUrl = getStringArrayAt(episodeUrlArray, focusIndex);
             writeStringToFile(fileName, playUrl);
             print("playUrl: ",playUrl );
             showIdle();
             postMessage("enter"); 
           }
         }
        ret;
      </script>
    </onUserInput>

	<!--ContentSource Logo-->
    <image offsetXPC="9.2" offsetYPC="3" widthPC="8.91" heightPC="15.83" redraw="no">
      <script>
   		contentSourceLogoUrl;
      </script>
    </image>

      <!-- background color of short story section -->
    <!-- display additional for current focus show on the bottom row -->
    <!-- the short story -->
  <text offsetXPC="18.2" offsetYPC="20" widthPC="40" heightPC="5"  fontSize="18" foregroundColor="255:255:255"
    backgroundColor="-1:-1:-1" align="left"
   >
      <script>
        curChannel;
      </script>
    </text>

<!--
    <text offsetXPC= "7.8"  offsetYPC= "72" widthPC="73" heightPC="2.5"  fontSize="10"
    foregroundColor="38:22:93"
    redraw=yes useBackgroundSurface=yes>
      <script>
        datePub;
      </script>
    </text>
-->
<!--

    <text offsetXPC= "7.8"  offsetYPC= "74.5" widthPC="73" heightPC="11.3"  fontSize="10" lines="4"
    foregroundColor="38:22:93"
    redraw=yes useBackgroundSurface=yes>
      <script>
        getStringArrayAt(descriptionArray, curIndex );
      </script>
    </text>
    
-->

    <!-- image of the story -->
    <!--
    <image offsetXPC= "85"  offsetYPC= "73" widthPC="8" heightPC="12" redraw="yes" >
      <script>
        curIndex = getFocusItemIndex();
        if(curIndex &lt; 0)
        {curIndex = 0;}
        getStringArrayAt(imageUrlArray , curIndex );
      </script>
    </image>
    -->

      <!-- top indicator -->
    <image offsetXPC="20.5" offsetYPC="29" widthPC="1.41" heightPC="1.94" redraw="yes" useBackgroundSurface=yes>
      <script>
        index = getFocusItemIndex();
        itemCount = getPageInfo("itemCount");
        print("itemCount", itemCount);
        print("focusIndex", index);
        if (itemCount &lt; 6) {
     	"null";
        }
        else {
        if (index &gt; 2) {
        "./IMS_Modules/Mediafly/image/arrow_up.fsp";
        }else
        {
       "null";
        }
        }
      </script>
    </image>

    <image offsetXPC="20.5" offsetYPC="86.2" widthPC="1.41" heightPC="1.94" redraw="yes" useBackgroundSurface=yes>
      <script>
        index = getFocusItemIndex();
        itemCount = getPageInfo("itemCount");
        if (itemCount &lt; 6) {
       null;
        }
        else {
        if (index &gt; (itemCount-4))
        {
       		null;
        }
        else
        {
       		 "./IMS_Modules/Mediafly/image/arrow_down.fsp";
        }
        }
      </script>
    </image>
    
    <itemDisplay>
		<image offsetXPC=0 offsetYPC=0 widthPC=100 heightPC=100>
			<script>
			index1 = getQueryItemIndex();
			index2 =getFocusItemIndex ();
			if (index1 == index2)
			{
				if (getDrawingItemState() == "focus")
				{
					"./IMS_Modules/Mediafly/image/mediafly_channelepisodes_focus.fsp";
				}
				else
				{
					"./IMS_Modules/Mediafly/image/mediafly_channelepisodes_unfocus.fsp";
				}
			}
			else
			{
				"./IMS_Modules/Mediafly/image/mediafly_channelepisodes_unfocus.fsp";
			}
			
			</script>
		</image>
		
		<text offsetXPC= 8 offsetYPC=10 widthPC=86 heightPC=80 backgroundColor=-1:-1:-1  fontSize=16 >
			<foregroundColor>
				<script>
					fgcolor = "102:102:102";
					queryIndex = getQueryItemIndex();
					focusIndex = getFocusItemIndex();
					if (queryIndex == focusIndex) {
						fgcolor = "0:148:13";
					}
					fgcolor;
				</script>
			</foregroundColor>
			
			<script>
				index = getQueryItemIndex();
				str =  getStringArrayAt(titleArray , index);
				str;
			</script>
		</text>
			
	</itemDisplay>
    


  
   </mediaDisplay>

  <item_template>
    
    <media:thumbnail>
      <script>
        getStringArrayAt(imageUrlArray , -1);
      </script>
    </media:thumbnail>
      <link>
        <script>
          episodeLink;
        </script>
    </link>
  </item_template>
  <channel>
       <title></title>
      <itemSize>
      <script>
        itemCnt;
      </script>
        null;
    </itemSize>
 
  </channel>

  </rss>

