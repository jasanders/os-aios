<?xml version='1.0' ?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">

<bookmark>wirelessConnect</bookmark>

<onEnter>
	SetScreenSaverStatus("no");
	ret = wirelessConnectStart();
	if( ret == "E_FAIL" ) {
		postMessage("return");
	}
	else {
		header = "$[NETWL_TEST_CONN]";
		infoStr = "$[NETWL_TESTING]";
		prompt = "$[CANCEL]";

		wireless_mode = getWlProfileData("MODE");
		if( wireless_mode == "$[NETWL_INFRASTRUCTURE]" ) {
			header = "$[NETWL_INFRASTRUCTURE]";
		}
		else if( wireless_mode == "$[NETWL_P2P]" ) {
			header = "$[NETWL_P2P]";
		}
		else if( wireless_mode == "$[NETWL_WPS]" ) {
			header = "$[NETWL_WPS]";
			wps_mode = getWirelessWpsMode();
			if( wps_mode == "$[NETWL_WPS_PBC]" ) {
				header = "$[NETWL_WPS_PBC]";
				infoStr = "$[NETWL_WPS_PBC_DESC]";
			}
			else if( wps_mode == "$[NETWL_WPS_PIN]" ) {
				header = "$[NETWL_WPS_PIN]";
				infoStr = "$[NETWL_WPS_PIN_DESC]" + ", " + getWirelessPinCode();
			}
		}
		else if( wireless_mode == "$[NETWL_WCN]" ) {
			header = "$[NETWL_WCN]";
			infoStr = "$[NETWL_WCN_DESC]" + ", " + getWirelessPinCode();
			setWirelessWpsMode("$[NETWL_WPS_PIN]");
		}

		redrawDisplay();
		state = wirelessConnectQueryState();
		setRefreshTime(500);
	}
</onEnter>

<onExit>
	SetScreenSaverStatus("yes");
	setRefreshTime(-1);
</onExit>

<onRefresh>
	newState = wirelessConnectQueryState();
	if( state != newState ) {
		if( newState == "OK" ) {
			setRefreshTime(-1);
			wirelessConnectStop("COMPLETE");

			doModalRss("rss_file://./setup_menu/skin4/scripts/dynamicPopup.rss", "mediaDisplay", "popupDialog", 0);
			redrawDisplay("no");
			postMessage("enter");
		}
		else if( newState == "FAIL" ) {
			setRefreshTime(-1);
			wirelessConnectStop("CANCEL");

			ssid = "";
			security = "";
			passwd = "";
			setWlTmpProfileData("SSID", ssid);
			setWlTmpProfileData("SECURITY", security, passwd);

			infoStr = "$[NETWL_TEST_FAIL].";
			prompt = "$[OK]";
			redrawDisplay();
		}
		else if( newState == "NONE" || newState == "START" || newState == "PROCESS" ) {
			print("newState = ", newState);
		}

		state = newState;
	}
</onRefresh>

<mediaDisplay
	name=onePartView
	itemPerPage=1
	viewAreaXPC=31.3
	viewAreaYPC=21.3
	viewAreaWidthPC=37.3
	viewAreaHeightPC=57.5

	itemYPC=70.0
	itemHeightPC=12.1
	itemImageYPC=70.0
	itemImageHeightPC=12.1

	imageFocus=""

	sideColorRight=-1:-1:-1
	sideColorLeft=-1:-1:-1
	sideColorTop=-1:-1:-1
	sideColorBottom=-1:-1:-1
	backgroundColor=-1:-1:-1
	focusBorderColor=-1:-1:-1
	unFocusBorderColor=-1:-1:-1
	itemBackgroundColor=-1:-1:-1

	showHeader="no"
	showDefaultInfo="no"
>

<itemXPC>
	<script>
		itemXPC=8.8;
		if (doFade == "no") {
			itemXPC = 0;
		}
		itemXPC;
	</script>
</itemXPC>

<itemWidthPC>
	<script>
		itemWidthPC = 83.5;
		if (doFade == "no") {
			itemWidthPC = 100;
		}
		itemWidthPC;
	</script>
</itemWidthPC>

<itemImageXPC>
	<script>
		itemImageXPC=8.8;
		if (doFade == "no") {
			itemImageXPC = 0;
		}
		itemImageXPC;
	</script>
</itemImageXPC>

<itemImageWidthPC>
	<script>
		itemImageWidthPC = 83.5;
		if (doFade == "no") {
			itemImageWidthPC = 100;
		}
		itemImageWidthPC;
	</script>
</itemImageWidthPC>

<backgroundDisplay>
	<image offsetXPC=0 offsetYPC=0 widthPC=100 heightPC=100>
		<script>
			bgimage = "./setup_menu/skin4/image/setup_popup_bg.fsp";
			if (doFade == "no") {
				bgimage = "./setup_menu/skin4/image/video_popup.fsp";
			}
			bgimage;
		</script>
	</image>
</backgroundDisplay>

<text offsetXPC=8.8 offsetYPC=10.1 widthPC=83.5 heightPC=18.4 fontSize=18 align=center backgroundColor=-1:-1:-1 foregroundColor=255:255:255 >
	<script>
		header;
	</script>
</text>

<text offsetXPC=13.0 offsetYPC=32.4 widthPC=75.1 heightPC=21.7 fontSize=14 align=left lines=2>
	<script>
		infoStr;
	</script>
</text>

<!-- itemDisplay will draw widget inside the item area, item area is decided by mediaDisplay attributes -->
<itemDisplay>
	<image offsetXPC=0 offsetYPC=0 widthPC=100 heightPC=100>
		<script>
			image = "";
			queryIndex = getQueryItemIndex();
			focusIndex = getFocusItemIndex();
			if (queryIndex == focusIndex) {
				image = "./setup_menu/skin4/image/398_focus.fsp";
				if (doFade == "no") {
					image = "./setup_menu/skin4/image/video_popup_focus.fsp";
				}
			}
			image;
		</script>
	</image>
	<text offsetXPC=5 offsetYPC=5 widthPC=90 heightPC=90 align=center fontSize=16 backgroundColor=-1:-1:-1>
		<foregroundColor>
			<script>
				fgcolor = "255:255:255";
				queryIndex = getQueryItemIndex();
				focusIndex = getFocusItemIndex();
				data = getStringArrayAt(popupOptions, queryIndex);
				if (queryIndex == focusIndex) {
					fgcolor = "0:153:255";
				}
				fgcolor;
			</script>
		</foregroundColor>
		<script>
			title = getItemInfo("title");
			title;
		</script>
	</text>
</itemDisplay>

<popupDialog>
	<mediaDisplay>
		<onEnter>
			name = getWlProfileData("SSID");
			setWlTmpProfileData("NAME", name);

            profile = "$[NETWL_PROFILE_NAME]" + ": " + getWlProfileData("NAME");
            mode = "$[NETWL_CONN_MODE]" + ": " + getWlProfileData("MODE");
            ssid = "$[NETWL_SSID]" + ": " + getWlProfileData("SSID");
            if( getWlProfileData("MODE") == "$[NETWL_WPS]" ) {
            	security = "$[NETWL_SECURITY]" + ": " + "$[NETWL_WPS]";
            }
            else {
            	security = "$[NETWL_SECURITY]" + ": " + getWlProfileData("SECURITY");
            }
            ip = "$[NET_IP_ADDR]" + ": " + getWirelessIpAddr("IP", "SINGLE");
            submask = "$[NET_SUB_MASK]" + ": " + getWirelessIpAddr("SUBMASK", "SINGLE");
            gateway = "$[NET_DEF_GATEWAY]" + ": " + getWirelessIpAddr("GATEWAY", "SINGLE");

		    infoStr = "$[CONNECTED]." + " " + "$[NETWL_TEST_OK_LIST].";

			popupHeader = "$[CONNECTION_TEST]";
			popupMessageSize = 9;
			popupMessages = pushBackStringArray(popupMessages, infoStr);
			popupMessages = pushBackStringArray(popupMessages, "");
			popupMessages = pushBackStringArray(popupMessages, profile);
			popupMessages = pushBackStringArray(popupMessages, mode);
			popupMessages = pushBackStringArray(popupMessages, ssid);
			popupMessages = pushBackStringArray(popupMessages, security);
			popupMessages = pushBackStringArray(popupMessages, ip);
			popupMessages = pushBackStringArray(popupMessages, submask);
			popupMessages = pushBackStringArray(popupMessages, gateway);
			popupOptionSize = 1;
			popupOptions = pushBackStringArray(popupOptions, "$[OK]");
			popupOptionWide = 2;
		</onEnter>
	</mediaDisplay>
</popupDialog>

<onEnter>
	doFade = "yes";
	name = getWlProfileData("NAME");
	if (name == "WPS_MODE_PBC") {
		apName = getCat1ApName();
		if (apName == "RootAP" || apName == "VideoPlayback") {
			doFade = "no";
		}
		redrawDisplay();
	}

	if (doFade == "yes") {
		setFullScreenFade(64);
	}
</onEnter>

<onUserInput>
	handle = "false";
	userInput = currentUserInput();
	if( "return" == userInput ) {
		if (state != NULL) {
			if( state == "NONE" || state == "START" || state == "PROCESS" ) {
				wirelessConnectStop("CANCEL");
			}
			setReturnString(state);
		}
	}
	else if( "enter" == userInput ) {
		if ( state == "NONE" || state == "START" || state == "PROCESS" ) {
			wirelessConnectStop("CANCEL");
			postMessage("return");
			handle = "true";
		}
	}
	else if ("left" == userInput || "right" == userInput) {
		handle = "true";
	}
	handle;
</onUserInput>

</mediaDisplay>


<channel>
	<title>$[NETWL_TEST_CONN]</title>
	<link>rss_file://./setup_menu/skin4/scripts/wirelessConnect.rss</link>


<item>
<title>
	<script>
		prompt;
	</script>
</title>
<mediaDisplay>
	<onEnter>
		WLAN0_PROFILE_NUM = getWlProfileInfo("TOTAL_NUM");
		profileIndex = 0;
		profiles = "";
		while (1) {
			sepcifiedSsid = getWlProfileData("SSID", profileIndex);
			if (sepcifiedSsid != "") {
				profiles = pushBackStringArray(profiles, sepcifiedSsid);
			}
			else {
				profiles = pushBackStringArray(profiles, "Connection" + profileIndex);
			}

			profileIndex += 1;
			if (profileIndex == WLAN0_PROFILE_NUM) {
				break;
			}
		}

		popupHeader = "$[SAVE_CONNECTION]";
		popupMessageSize = 1;
		popupMessages = pushBackStringArray(popupMessages, "$[REPLACE_CONNECTION]");
		popupOptionSize = 3;
		popupOptions = profiles;
		popupOptionFocus = "";
		popupOptionWide = 1;
	</onEnter>
</mediaDisplay>
<onClick>
	<script>
		if( state == "OK" || newState == "OK" ) {
			activedSsid = getWlProfileData("SSID");
			profileIndex = 0;
			profiles = "";
			WLAN0_PROFILE_NUM = getWlProfileInfo("TOTAL_NUM");
			targetIndex = WLAN0_PROFILE_NUM;
			while (1) {
				sepcifiedSsid = getWlProfileData("SSID", profileIndex);
				if (sepcifiedSsid != "") {
					profiles = pushBackStringArray(profiles, sepcifiedSsid);
					if (sepcifiedSsid == activedSsid) {
						if (targetIndex == WLAN0_PROFILE_NUM) {
							targetIndex = profileIndex;
						}
					}
				}
				else {
					profiles = pushBackStringArray(profiles, "Connection" + profileIndex);
					if (targetIndex == WLAN0_PROFILE_NUM) {
						targetIndex = profileIndex;
					}
				}

				profileIndex += 1;
				if (profileIndex == WLAN0_PROFILE_NUM) {
					break;
				}
			}
			if (targetIndex &lt; WLAN0_PROFILE_NUM) {
				setWlProfileActiveIndex(targetIndex);
				setWlProfileCopyFromTmp(targetIndex);
			}
			else {
				rss = "rss_file://./setup_menu/skin4/scripts/dynamicPopup.rss";
				targetSsid = doModalRss(rss);
				if( targetSsid != NULL ) {
					targetIndex = 0;
					while (1) {
						specifiedSsid = getStringArrayAt(profiles, targetIndex);
						if (targetSsid == specifiedSsid) {
							break;
						}

						targetIndex += 1;
						if (targetIndex == WLAN0_PROFILE_NUM) {
							break;
						}
					}

					setWlProfileActiveIndex(targetIndex);
					setWlProfileCopyFromTmp(targetIndex);
				}
			}
		}
		postMessage("return");
		null;
	</script>
</onClick>
</item>


</channel>
</rss>
