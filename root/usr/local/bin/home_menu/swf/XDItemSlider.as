/** * XDItemSlider, Version 0.03. * * @author: Josh Ulm */class XDItemSlider extends MovieClip{	// public	public var cItemNum:Number = 1;		// private	private var cItem:MovieClip;	private var oItem:MovieClip;		// user defined	[Inspectable(defaultValue="")]	public var itemGroup:Array;	[Inspectable(defaultValue="")]	public var actionType:Array;	[Inspectable(defaultValue="")]	public var actionString:Array;	[Inspectable(defaultValue=120)]	public var focusPoint:Number;		function XDItemSlider()	{		//	}	public function activate() {		// show current item		setCurrentItem();	}	public function deactivate() {		// hide current item		cItem.gotoAndStop(1);	}	public function kpUp() {		//	}	public function kpDown() {		//	}	public function kpLeft() {		slideClip(cItemNum - 1);	}	public function kpRight() {		slideClip(cItemNum + 1);	}	public function kpEnter() {		_parent._parent.action(this)	}	public function setCurrentItem() {		cItem = eval(itemGroup[cItemNum-1]);		cItem.gotoAndStop(2);		cItem.swapDepths(this.getNextHighestDepth());	}	public function slideClip(n:Number):Void {		var len:Number = itemGroup.length;		if (1 <= n && n <= len) {			// hide old item			oItem = cItem;			oItem.gotoAndStop(1);			// set current item			cItemNum = n;			setCurrentItem();			// get new destination			var d:Number = -cItem._x + focusPoint;			// run tween			this.onEnterFrame = function() {				var cp:Number = _x;				_x += Math.round((d - _x) * .5);				if (_x == cp) {					// tween complete					delete this.onEnterFrame;				}			}		}	}}